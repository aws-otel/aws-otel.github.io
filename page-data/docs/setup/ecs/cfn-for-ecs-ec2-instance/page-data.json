{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/setup/ecs/cfn-for-ecs-ec2-instance",
    "result": {"data":{"mdx":{"id":"85eddbc7-c97e-57a2-a970-d151939aedd7","excerpt":"In this tutorial, we will demonstrate how to run OpenTelemetry Collector (ADOT Collector) as a daemon on the\nAmazon Elastic Container Service (Amazon ECS) inâ€¦","fields":{"slug":"/docs/setup/ecs/cfn-for-ecs-ec2-instance/"},"frontmatter":{"title":"Cloudformation Template for collecting ECS EC2 instance metrics","description":"In this tutorial, we will demonstrate how to run OpenTelemetry Collector (ADOT Collector) as a daemon on the Amazon Elastic Container Service (Amazon ECS) in Amazon Elastic Compute Cloud (Amazon EC2).","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Cloudformation Template for collecting ECS EC2 instance metrics\",\n  \"description\": \"In this tutorial, we will demonstrate how to run OpenTelemetry Collector (ADOT Collector) as a daemon on the Amazon Elastic Container Service (Amazon ECS) in Amazon Elastic Compute Cloud (Amazon EC2).\",\n  \"path\": \"/docs/setup/ecs/cfn-for-ecs-ec2-instance\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial, we will demonstrate how to run OpenTelemetry Collector (ADOT Collector) as a daemon on the\\nAmazon Elastic Container Service (Amazon ECS) in Amazon Elastic Compute Cloud (Amazon EC2) mode.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"p\", null, \"To Install ADOT Collector by using CloudFormation, you have to have a cluster.\\nIf you are not familiar with how to create a cluster, you can check this \", mdx(Link, {\n    to: \"/docs/setup/ecs/create-cluster\",\n    mdxType: \"Link\"\n  }, \"create-cluster\"), \"\\nsection.\"), mdx(\"h3\", {\n    \"id\": \"setup-for-ecs-ec2-to-get-instance-metrics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#setup-for-ecs-ec2-to-get-instance-metrics\",\n    \"aria-label\": \"setup for ecs ec2 to get instance metrics permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Setup for ECS EC2 to get instance metrics\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download the CloudFormation template file for installing ADOT Collector for ECS EC2. Run the following curl command.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl -O https://raw.githubusercontent.com/aws-observability/aws-otel-collector/main/deployment-template/ecs/aws-otel-ec2-instance-metrics-daemon-deployment-cfn.yaml\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Replace the <PATH_TO_CloudFormation_TEMPLATE> with the path where your template saved in the command, and export the\\nfollowing parameters, and then run CloudFormation command.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cluster_Name\"), \" - ECS Cluster name setup in Prerequisite step\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS_Region\"), \" - Region the data will be sent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PATH_TO_CloudFormation_TEMPLATE\"), \" - CFN template path downloaded in Step 1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"command\"), \" -  Assign value to the command variable to select the config file path; the ADOT Collector\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--config=/etc/ecs/otel-instance-metrics-config.yaml\"), \" - To consume ECS EC2 instance metrics\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }, \"ClusterName=<Cluster_Name>\\nRegion=<AWS_Region>\\ncommand=<command>\\naws cloudformation create-stack --stack-name AOCECS-${ClusterName}-${Region} \\\\\\n    --template-body file://<PATH_TO_CloudFormation_TEMPLATE> \\\\\\n    --parameters ParameterKey=ClusterName,ParameterValue=${ClusterName} \\\\\\n                 ParameterKey=CreateIAMRoles,ParameterValue=True \\\\\\n                 ParameterKey=command,ParameterValue=${command} \\\\\\n    --capabilities CAPABILITY_NAMED_IAM \\\\\\n    --region ${Region}\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Go to you ECS Console and see if the task is running.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Go to the \", mdx(Link, {\n    to: \"/docs/setup/results-EC2-instance-metrics\",\n    mdxType: \"Link\"\n  }, \"Results\"), \" section to learn how to check the collected metrics and traces.\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":3,"value":"Setup for ECS EC2 to get instance metrics"}]}},"pageContext":{"slug":"/docs/setup/ecs/cfn-for-ecs-ec2-instance/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/setup/ecs/cfn-for-ecs-ec2-instance.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}