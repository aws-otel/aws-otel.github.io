{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/setup/ecs/results-traces",
    "result": {"data":{"mdx":{"id":"9a6ba6f5-4a32-59b5-a7ac-ca13355a642b","excerpt":"In this section, we will check the traces in AWS X-Ray collected using x-ray receiver. Check Trace IDs Let’s go to Xray console and click  Traces  in the left…","fields":{"slug":"/docs/setup/ecs/results-traces/"},"frontmatter":{"title":"Results: Check Traces in AWS X-Ray","description":"In this section, we will check the traces in AWS X-Ray collected using x-ray receiver.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Results: Check Traces in AWS X-Ray\",\n  \"description\": \"In this section, we will check the traces in AWS X-Ray collected using x-ray receiver.\",\n  \"path\": \"/docs/setup/ecs\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this section, we will check the traces in AWS X-Ray collected using x-ray receiver.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Check Trace IDs\"))), mdx(\"p\", null, \"Let\\u2019s go to Xray console and click \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Traces\"), \" in the left list. Trace IDs sent from the x-ray SDK are shown below.\"), mdx(\"img\", {\n    src: trace_01,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"10px 0\"\n    }\n  }), mdx(\"div\", {\n    style: {\n      \"height\": \"40px\"\n    }\n  }), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Check Trace map and raw data\"))), mdx(\"p\", null, \"Click one trace id to see the Trace map. By clicking the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Raw data\"), \" on top, we can see the raw trace data.\"), mdx(\"img\", {\n    src: trace_02,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"10px 0\"\n    }\n  }), mdx(\"div\", {\n    style: {\n      \"height\": \"40px\"\n    }\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/docs/setup/ecs/results-traces/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/setup/ecs/results-traces.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}