{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/setup/ecs/create-task-definition-instance-console",
    "result": {"data":{"mdx":{"id":"3c22ea9d-d1aa-5bb2-88b3-94e57300abd3","excerpt":"In this tutorial, we will demonstrate how to install ADOT Collector using Task Definition on the Amazon Elastic\nContainer Service (Amazon ECS) through AWSâ€¦","fields":{"slug":"/docs/setup/ecs/create-task-definition-instance-console/"},"frontmatter":{"title":"Install ADOT Collector by creating Task Definition through AWS console for ECS EC2 instance metrics ","description":"In this tutorial, we will demonstrate how to install ADOT Collector using Task Definition on the Amazon Elastic Container Service (Amazon ECS) through AWS console for ECS EC2 instance metrics.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Install ADOT Collector by creating Task Definition through AWS console for ECS EC2 instance metrics \",\n  \"description\": \"In this tutorial, we will demonstrate how to install ADOT Collector using Task Definition on the Amazon Elastic Container Service (Amazon ECS) through AWS console for ECS EC2 instance metrics.\",\n  \"path\": \"/docs/setup/ecs/create-task-definition-instance-console\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial, we will demonstrate how to install ADOT Collector using Task Definition on the Amazon Elastic\\nContainer Service (Amazon ECS) through AWS console.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Go to AWS Management Console and select Elastic Container Service. From the left side navigation,\\nselect \", mdx(Link, {\n    to: \"https://us-west-2.console.aws.amazon.com/ecs/home?/taskDefinitions#/taskDefinitions\",\n    mdxType: \"Link\"\n  }, \"Task Definitions\"), \"\\nand click the Create new Task Definition button.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the EC2 as the Launch type and move forward.\"))), mdx(\"img\", {\n    src: task_01,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Put a task-definition name (i.e.aws-otel) and select the role you created in the previous section from Taskrole drop-down menu.\"), mdx(\"img\", {\n    src: task2,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For the task execution role, select the role name you created by clicking Task execution role drop-down menu.\"), mdx(\"img\", {\n    src: task3,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), \"Select Network Mode to `Bridge`\", mdx(\"img\", {\n    src: task25,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the Task size:\\nMention task memory and task cpu  for your task-definition like use 2048 for memory, 1024 for CPU\"), mdx(\"img\", {\n    src: task5,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Go down to the last part Volumes, click the Add volume to add Volumes:\"), mdx(\"img\", {\n    src: task26,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In the container definitions section, click the Add Container button. Let\\u2019s add the AWS Observability Collector container first.\\nPut a container name (i.e. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"aws-otel-collector\"), \") and use the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"amazon/aws-otel-collector\"), \" container image.\\nWe can keep everything else default\"), mdx(\"img\", {\n    src: task6,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), \"[Optional] In the 'Advanced container configuration' section, let's setup the HealthCheck instructions for aws-otel-collector. Provide the '/healthcheck' command and enter 5s as interval, 6s as Timeout, 1s as Start period, and 5 as Retries.\", mdx(\"img\", {\n    src: task_06,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Set up the OpenTelemetry configuration file for AWS Observability Toolkit (AOT):\\nIn the  Environment Command section add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--config=/etc/ecs/otel-instance-metrics-config.yaml\"), \" to select the ECS default configuration\\nfile for AWS Observability Collector (AOC). This will collect the instance level metrics for ECS EC2 instances.\"), mdx(\"img\", {\n    src: task7,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mount points setup :\\nGo to the STORAGE AND LOGGING part, click the Add mount point to add the following points:\"), mdx(\"img\", {\n    src: task27,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In the STORAGE and LOGGING section, let\\u2019s enable Auto-configure CloudWatch logs.\"), mdx(\"img\", {\n    src: task10,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), \"We are done here. Keep other config options as they are. Finish adding the container.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click the Create button in the bottom to finish the process. If everything works fine, you will see something like the following.\"), mdx(\"img\", {\n    src: task19,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/docs/setup/ecs/create-task-definition-instance-console/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/setup/ecs/create-task-definition-instance-console.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}