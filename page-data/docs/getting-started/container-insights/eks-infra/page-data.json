{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/container-insights/eks-infra",
    "result": {"data":{"mdx":{"id":"f5e676b0-d182-5884-b945-de33dfe6b51e","excerpt":"In this tutorial, we will walk through how to enable CloudWatch Container Insights infrastructure metrics with ADOT Collector for an EKS EC2 cluster.  Gettingâ€¦","fields":{"slug":"/docs/getting-started/container-insights/eks-infra/"},"frontmatter":{"title":"Container Insights EKS Infrastructure Metrics","description":"In this tutorial, we will walk through how to enable CloudWatch Container Insights infrastructure metrics with ADOT Collector for an EKS EC2 cluster.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Container Insights EKS Infrastructure Metrics\",\n  \"description\": \"In this tutorial, we will walk through how to enable CloudWatch Container Insights infrastructure metrics with ADOT Collector for an EKS EC2 cluster.\",\n  \"path\": \"/docs/getting-started/container-insights/eks-infra\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial, we will walk through how to enable CloudWatch Container Insights infrastructure metrics with ADOT Collector for an EKS EC2 cluster. \"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Getting Started\"), mdx(\"p\", null, \"To use the ADOT Collector to collect infrastructure metrics for a service cluster, we need to make sure \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-prerequisites.html\"\n  }, \"all the prerequisites\"), \" are satisfied.\"), mdx(\"p\", null, \"Then we can deploy the ADOT Collector as a daemon set to the cluster by entering the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl https://raw.githubusercontent.com/aws-observability/aws-otel-collector/main/deployment-template/eks/otel-container-insights-infra.yaml |\\nkubectl apply -f -\\n\")), mdx(\"p\", null, \"You can run the following command to confirm that the ADOT Collector is running:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"kubectl get pods -l name=aws-otel-eks-ci -n aws-otel-eks\\n\")), mdx(\"p\", null, \"If the results include multiple pods (one for each cluster node) in the Running state, the Collector is running and collecting metrics from the cluster.\\nThe ADOT Collector creates a log group named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/aws/containerinsights/{your-cluster}/performance\"), \" and sends the performance log events to this log group.\\nEach collector pod on a cluster node will publish logs to a log stream with the name of the cluster node. In the screenshot, three log streams are present\\nunder the log group \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/aws/containerinsights/ci-demo/performance\"), \" and each corresponds to one cluster node:\"), mdx(\"img\", {\n    src: imgLogGroup,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), mdx(\"p\", null, \"The metrics that Container Insights collects are also available in CloudWatch automatic dashboards as different resource types, such as\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EKS Clusters\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EKS Namespaces\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EKS Nodes\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EKS Services\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EKS Pods\"), \". Here is a screenshot for the pod level metrics for\\na cluster named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ci-demo\"), \":\"), mdx(\"img\", {\n    src: imgPodMetrics,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), mdx(\"h2\", {\n    \"id\": \"default-configuration-to-support-cloudwatch-container-insights-for-eks-ec2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#default-configuration-to-support-cloudwatch-container-insights-for-eks-ec2\",\n    \"aria-label\": \"default configuration to support cloudwatch container insights for eks ec2 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Default configuration to support CloudWatch Container Insights for EKS EC2\"), mdx(\"p\", null, \"The yaml file used in previous deployment contains the default configuration for ADOT Collector to enable CloudWatch Container Insights for EKS. The default\\nconfiguration includes the essential components for collecting infrastructure metric in EKS cluster.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"receivers:\\n  awscontainerinsightreceiver:\\nprocessors:\\n  batch/metrics:\\n    timeout: 60s\\nexporters:\\n  awsemf:\\n    namespace: ContainerInsights\\n    log_group_name: '/aws/containerinsights/{ClusterName}/performance'\\n    log_stream_name: '{NodeName}'\\n    resource_to_telemetry_conversion:\\n      enabled: true\\n    dimension_rollup_option: NoDimensionRollup\\n    parse_json_encoded_attr_values: [Sources, kubernetes]\\n    metric_declarations:\\n      # node metrics\\n      - dimensions: [[NodeName, InstanceId, ClusterName]]\\n        metric_name_selectors:\\n          - node_cpu_utilization\\n          - node_memory_utilization\\n          - node_network_total_bytes\\n          - node_cpu_reserved_capacity\\n          - node_memory_reserved_capacity\\n          - node_number_of_running_pods\\n          - node_number_of_running_containers\\n      - dimensions: [[ClusterName]]\\n        metric_name_selectors:\\n          - node_cpu_utilization\\n          - node_memory_utilization\\n          - node_network_total_bytes\\n          - node_cpu_reserved_capacity\\n          - node_memory_reserved_capacity\\n          - node_number_of_running_pods\\n          - node_number_of_running_containers\\n          - node_cpu_usage_total\\n          - node_cpu_limit\\n          - node_memory_working_set\\n          - node_memory_limit\\n      # pod metrics\\n      - dimensions: [[PodName, Namespace, ClusterName], [Service, Namespace, ClusterName], [Namespace, ClusterName], [ClusterName]]\\n        metric_name_selectors:\\n          - pod_cpu_utilization\\n          - pod_memory_utilization\\n          - pod_network_rx_bytes\\n          - pod_network_tx_bytes\\n          - pod_cpu_utilization_over_pod_limit\\n          - pod_memory_utilization_over_pod_limit\\n      - dimensions: [[PodName, Namespace, ClusterName], [ClusterName]]\\n        metric_name_selectors:\\n          - pod_cpu_reserved_capacity\\n          - pod_memory_reserved_capacity\\n      - dimensions: [[PodName, Namespace, ClusterName]]\\n        metric_name_selectors:\\n          - pod_number_of_container_restarts\\n      # cluster metrics\\n      - dimensions: [[ClusterName]]\\n        metric_name_selectors:\\n          - cluster_node_count\\n          - cluster_failed_node_count\\n      # service metrics\\n      - dimensions: [[Service, Namespace, ClusterName], [ClusterName]]\\n        metric_name_selectors:\\n          - service_number_of_running_pods\\n      # node fs metrics\\n      - dimensions: [[NodeName, InstanceId, ClusterName], [ClusterName]]\\n        metric_name_selectors:\\n          - node_filesystem_utilization\\n      # namespace metrics\\n      - dimensions: [[Namespace, ClusterName], [ClusterName]]\\n        metric_name_selectors:\\n          - namespace_number_of_running_pods\\nservice:\\n  pipelines:\\n    metrics:\\n      receivers: [awscontainerinsightreceiver]\\n      processors: [batch/metrics]\\n      exporters: [awsemf]\\n\")), mdx(\"h3\", {\n    \"id\": \"receiver\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#receiver\",\n    \"aria-label\": \"receiver permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Receiver\"), mdx(\"p\", null, \"The receiver \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awscontainerinsightreceiver\"), \" is a component introduced for Container Insights support. It collects metrics from an embedded \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cadvisor\"), \" lib and\\nkubernetes api server. The default metric collection interval is 60 seconds. \"), mdx(\"h3\", {\n    \"id\": \"processor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#processor\",\n    \"aria-label\": \"processor permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Processor\"), mdx(\"p\", null, \"The processor \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"batch/metrics\"), \" is used to batch the metrics before sending them to the AWS embedded metric format exporter. This reduces the number of requests that the\\nexporter needs to publish the metrics.\"), mdx(\"h3\", {\n    \"id\": \"exporter\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#exporter\",\n    \"aria-label\": \"exporter permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Exporter\"), mdx(\"p\", null, \"The exporter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awsemf\"), \" is used to sent the metrics to the CloudWatch backend in the form of EMF logs. In the configuration for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awsemf\"), \" exporter, the two\\nplaceholders \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ClusterName}\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{NodeName}\"), \" in the log group and log stream names are replaced dynamically with the names of the cluster\\nand the node on which the ADOT Collector is running. In the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metric_declarations\"), \" section, different types of exported metrics are specified. The current setting\\nsupports the automatic dashboards for Container Insights. Customers can add new entries in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metric_declarations\"), \" section to export other metrics,\\nor change the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dimensions\"), \" to generate different sets of metrics using the same \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metric_name_selectors\"), \".  \"), mdx(\"h2\", {\n    \"id\": \"advanced-usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#advanced-usage\",\n    \"aria-label\": \"advanced usage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Advanced usage\"), mdx(\"p\", null, \"With the default configuration, the ADOT Collector collects the complete set of metrics as defined in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-metrics.html\"\n  }, \"this AWS public document\"), \".\\nTo reduce the AWS cost for the CloudWatch metrics and embedded metric format logs generated by Container Insights, you can customize the ADOT Collector using the following two methods.\"), mdx(\"h3\", {\n    \"id\": \"filter-out-embedded-metric-format-logs-with-third-party-processors\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#filter-out-embedded-metric-format-logs-with-third-party-processors\",\n    \"aria-label\": \"filter out embedded metric format logs with third party processors permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Filter out embedded metric format logs with third-party processors\"), mdx(\"p\", null, \"This involves the introduction of other third-party processors to filter out metrics or attributes to reduce the size of embedded metric format logs. In the following, we\\ndemonstrate the basic use of two processors. For more complicated use cases, you can refer to their readme files for details. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/filterprocessor\"\n  }, \"Filter Processor\"), \" can be used to filter out unwanted metrics.\\nFor example, suppose you want all the node-level metrics (with name prefix \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node_\"), \") except those for disk io and filesystem (with name prefix \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node_diskio\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node_filesystem\"), \").\\nYou can add the filter processor into the pipeline like the following:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"receivers:\\n  awscontainerinsightreceiver: \\n\\nprocessors:\\n  filter/include:\\n  # any names NOT matching filters are excluded from remainder of pipeline\\n    metrics:\\n      include:\\n        match_type: regexp\\n        metric_names:\\n            # re2 regexp patterns\\n            - ^node_.*\\n  filter/exclude:\\n  # any names matching filters are excluded from remainder of pipeline\\n    metrics:\\n      exclude:\\n        match_type: regexp\\n        metric_names:\\n            - ^node_diskio_.*\\n            - ^node_filesystem_.*\\n  batch/metrics:\\n    timeout: 60s\\n\\nexporters:\\n  awsemf:\\n    ...\\n    ...\\n\\nservice:\\n  pipelines:\\n    metrics:\\n      receivers: [awscontainerinsightreceiver]\\n      processors: [filter/include, filter/exclude, batch/metrics]\\n      exporters: [awsemf]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/resourceprocessor\"\n  }, \"Resource Processor\"), \" can be used to remove unwanted attributes.\\nFor example, if you want to remove the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubernetes\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Sources\"), \" fields from the embedded metric format logs, you can add the resource processor to the pipeline like the following:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"receivers:\\n  awscontainerinsightreceiver: \\n\\nprocessors:\\n  resource:\\n    attributes:\\n    - key: Sources\\n      action: delete\\n    - key: kubernetes\\n      action: delete\\n  batch/metrics:\\n    timeout: 60s\\n\\nexporters:\\n  awsemf:\\n    ...\\n    ...\\n\\nservice:\\n  pipelines:\\n    metrics:\\n      receivers: [awscontainerinsightreceiver]\\n      processors: [resource, batch/metrics]\\n      exporters: [awsemf]\\n\")), mdx(\"h3\", {\n    \"id\": \"configure-metrics-sent-by-cloudwatch-embedded-metric-format-exporter\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#configure-metrics-sent-by-cloudwatch-embedded-metric-format-exporter\",\n    \"aria-label\": \"configure metrics sent by cloudwatch embedded metric format exporter permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Configure metrics sent by CloudWatch embedded metric format exporter\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metric_declaration\"), \" section of CloudWatch embedded metric format exporter configuration characterizes the rules to generate metrics from embedded metric format logs. You can customize the section to generate only the metrics that you want.\\nFor example, you can keep only pod metrics from the default configuration.  This \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metric_declaration\"), \" section will look like the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"    metric_declarations:\\n      # pod metrics\\n      - dimensions: [[PodName, Namespace, ClusterName], [Service, Namespace, ClusterName], [Namespace, ClusterName], [ClusterName]]\\n        metric_name_selectors:\\n          - pod_cpu_utilization\\n          - pod_memory_utilization\\n          - pod_network_rx_bytes\\n          - pod_network_tx_bytes\\n          - pod_cpu_utilization_over_pod_limit\\n          - pod_memory_utilization_over_pod_limit\\n\")), mdx(\"p\", null, \"To reduce the number of metrics, you can keep only the dimension set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Service, Namespace, ClusterName]\"), \" if you don't care about others:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"    metric_declarations:\\n      # pod metrics\\n      - dimensions: [[Service, Namespace, ClusterName]]\\n        metric_name_selectors:\\n          - pod_cpu_utilization\\n          - pod_memory_utilization\\n          - pod_network_rx_bytes\\n          - pod_network_tx_bytes\\n          - pod_cpu_utilization_over_pod_limit\\n          - pod_memory_utilization_over_pod_limit\\n\")), mdx(\"p\", null, \"In addition, you might want to ignore the pod network metrics, you can delete the metrics \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pod_network_rx_bytes\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pod_network_tx_bytes\"), \".\\nSuppose you are interested in the dimension \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PodName\"), \", you can add it to the dimension set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Service, Namespace, ClusterName]\"), \".\\nWith the above customizations, the final \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metric_declarations\"), \" will become: \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"    metric_declarations:\\n      # pod metrics\\n      - dimensions: [[PodName, Namespace, Service]]\\n        metric_name_selectors:\\n          - pod_cpu_utilization\\n          - pod_memory_utilization\\n          - pod_cpu_utilization_over_pod_limit\\n          - pod_memory_utilization_over_pod_limit\\n\")), mdx(\"p\", null, \"This configuration will produce only 4 metrics (rather than 55 metrics as in the default configuration).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" When using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"containerd\"), \" runtime for Amazon EKS or Kubernetes, the Container Filesystem (ContainerFS) metrics are currently not available. This is a known issue and we're working on it, see also \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/google/cadvisor/issues/2785\"\n  }, \"Disk usage metric for containerd\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Getting Started"},{"depth":2,"value":"Default configuration to support CloudWatch Container Insights for EKS EC2"},{"depth":3,"value":"Receiver"},{"depth":3,"value":"Processor"},{"depth":3,"value":"Exporter"},{"depth":2,"value":"Advanced usage"},{"depth":3,"value":"Filter out embedded metric format logs with third-party processors"},{"depth":3,"value":"Configure metrics sent by CloudWatch embedded metric format exporter"}]}},"pageContext":{"slug":"/docs/getting-started/container-insights/eks-infra/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/container-insights/eks-infra.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}