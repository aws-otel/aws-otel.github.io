{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/container-insights",
    "result": {"data":{"mdx":{"id":"0e5c1b27-6de5-5899-918d-3b13a3cf7847","excerpt":"CloudWatch Container Insights  collects, aggregates,\nand summarizes metrics from your containerized applications and microservices.\nData is collected as logâ€¦","fields":{"slug":"/docs/getting-started/container-insights/"},"frontmatter":{"title":"Using CloudWatch Container Insights with AWS Distro for OpenTelemetry","description":"CloudWatch Container Insights collects, aggregates, and summarize metrics and logs from your containerized applications and microservices. Container Insights is available for Amazon Elastic Container Service (Amazon ECS), Amazon Elastic Kubernetes Service (Amazon EKS), and Kubernetes platforms on Amazon EC2. Amazon ECS support includes support for Fargate. Prometheus metrics with pre-built CloudWatch dashboards are also supported on these platforms.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Using CloudWatch Container Insights with AWS Distro for OpenTelemetry\",\n  \"description\": \"CloudWatch Container Insights collects, aggregates, and summarize metrics and logs from your containerized applications and microservices. Container Insights is available for Amazon Elastic Container Service (Amazon ECS), Amazon Elastic Kubernetes Service (Amazon EKS), and Kubernetes platforms on Amazon EC2. Amazon ECS support includes support for Fargate. Prometheus metrics with pre-built CloudWatch dashboards are also supported on these platforms.\",\n  \"path\": \"/docs/getting-started/container-insights\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html\"\n  }, \"CloudWatch Container Insights\"), \" collects, aggregates,\\nand summarizes metrics from your containerized applications and microservices.\\nData is collected as log events using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format.html\"\n  }, \"embedded metric format\"), \".\\nThese log events are entries that use a structured JSON schema that enables high-cardinality data to be ingested and stored at scale.\\nAmazon CloudWatch can create the aggregated CloudWatch metrics from the received EMF data.\"), mdx(\"p\", null, \"CloudWatch Container Insights uses the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws/amazon-cloudwatch-agent\"\n  }, \"CloudWatch agent\"), \" to collect\\nboth \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html\"\n  }, \"infrastructure metrics\"), \"\\nand \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-Prometheus.html\"\n  }, \"Prometheus metrics\"), \".\\nTo migrate existing customers to use AWS Distro for OpenTelemetry,\\nwe have enhanced the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector\"\n  }, \"ADOT Collector\"), \" to support the same CloudWatch Container Insights experience.\"), mdx(\"h2\", {\n    \"id\": \"collecting-infrastructure-metrics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#collecting-infrastructure-metrics\",\n    \"aria-label\": \"collecting infrastructure metrics permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Collecting infrastructure metrics\"), mdx(\"p\", null, \"CloudWatch Container Insights collects metrics for many resources such as CPU, memory, disk, and network.\\nIt also provides diagnostic information such as container restart failures.\\nThe metrics are aggregated at the cluster, node, pod, task, and service level as CloudWatch metrics.\"), mdx(\"p\", null, \"Note: Collecting infrastructure metrics through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awscontainerinsightreceiver\"), \" requires running ADOT Collector with privileged root access as it also collects container-related data from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cadvisor\"), \".\\nFor EKS deployments, use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1\"\n  }, \"Security Context\"), \" to specify the root user as owner of the Collector process:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"containers:\\n    - name: aws-otel-collector\\n      image: public.ecr.aws/aws-observability/aws-otel-collector:latest\\n      securityContext:\\n          runAsUser: 0\\n          runAsGroup: 0\\n\")), mdx(\"p\", null, \"For ECS deployments, use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-user\"\n  }, \"Task Definition\"), \" to specify the user owner of the collector process:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{\\n  \\\"name\\\": \\\"aoc-collector\\\",\\n  \\\"image\\\": \\\"public.ecr.aws/aws-observability/aws-otel-collector:latest\\\",\\n  \\\"user\\\": \\\"root\\\",\\n  ...\\n }\\n\")), mdx(\"p\", null, \"The following platforms are supported:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/eks-infra\",\n    mdxType: \"Link\"\n  }, \"Amazon EKS and Kubernetes platforms on Amazon EC2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/eks-fargate\",\n    mdxType: \"Link\"\n  }, \"Amazon EKS and Kubernetes platforms on Amazon Fargate\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://aws-otel.github.io/docs/components/ecs-metrics-receiver\"\n  }, \"Amazon ECS with cluster and service-level metrics\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Amazon ECS on Amazon EC2 with instance-level metrics (upcoming)\")), mdx(\"h2\", {\n    \"id\": \"collecting-prometheus-metrics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#collecting-prometheus-metrics\",\n    \"aria-label\": \"collecting prometheus metrics permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Collecting Prometheus metrics\"), mdx(\"p\", null, \"CloudWatch Container Insights monitoring for Prometheus automates the discovery of Prometheus metrics from containerized systems and workloads.\\nTo collect the Prometheus metrics, the ADOT Collector uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/observer/ecsobserver\"\n  }, \"ECSObserver extension\"), \",\\nPrometheus Receiver and the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/awsemfexporter\"\n  }, \"CloudWatch embedded metric format Exporter\"), \".\"), mdx(\"p\", null, \"The following platforms are supported:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/eks-prometheus\",\n    mdxType: \"Link\"\n  }, \"Amazon EKS and Kubernetes platforms on Amazon EC2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/eks-fargate\",\n    mdxType: \"Link\"\n  }, \"Amazon EKS and Kubernetes platforms on Amazon Fargate\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/ecs-prometheus\",\n    mdxType: \"Link\"\n  }, \"Amazon ECS on Amazon EC2 and Fargate\"))), mdx(\"h3\", {\n    \"id\": \"pre-built-dashboards-for-workloads-with-prometheus-metrics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#pre-built-dashboards-for-workloads-with-prometheus-metrics\",\n    \"aria-label\": \"pre built dashboards for workloads with prometheus metrics permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Pre-built dashboards for workloads with Prometheus metrics\"), mdx(\"p\", null, \"CloudWatch console has auto dashboard for workloads listed in following table.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Environment\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"AWS App Mesh\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Java JMX\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"NGINX\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"NGINX Plus\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"HAProxy\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Memcached\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/eks-prometheus\",\n    mdxType: \"Link\"\n  }, \"EKS\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"N\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/ecs-prometheus\",\n    mdxType: \"Link\"\n  }, \"ECS\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"N\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"N\")))), mdx(\"p\", null, \"Workload without pre-build dashboard can still send metrics to CloudWatch. However, you need to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create_dashboard.html\"\n  }, \"build your CloudWatch dashboard manually\"), \".\"), mdx(\"h3\", {\n    \"id\": \"export-prometheus-metrics-format\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#export-prometheus-metrics-format\",\n    \"aria-label\": \"export prometheus metrics format permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Export Prometheus metrics format\"), mdx(\"p\", null, \"Prometheus metrics in Container Insights are exported as both logs and metrics.\\nThe embedded metric format exporter matches metrics based on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metrics_declaration\"), \" configuration to add extra metadata in structured logs.\\nCloudWatch extracts embedded metric format log data to metrics automatically.\\nFor example assume that you have an EKS cluster called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eks-1\"), \" and a ECS cluster called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ecs-1\"), \".\\nYou will see the following resources in the CloudWatch console. The names of the log groups contain the cluster name. In CloudWatch,\\nall clusters are saved in one metric namespace, with different dimension values used to differentiate metrics from different clusters.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Environment\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Log group\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Metrics Namespace\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/eks-prometheus\",\n    mdxType: \"Link\"\n  }, \"EKS\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"/aws/containerinsights/eks-1/prometheus\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ContainerInsights/Prometheus\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(Link, {\n    to: \"/docs/getting-started/container-insights/ecs-prometheus\",\n    mdxType: \"Link\"\n  }, \"ECS\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"/aws/ecs/containerinsights/ecs-1/prometheus\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ECS/ContainerInsights/Prometheus\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Collecting infrastructure metrics"},{"depth":2,"value":"Collecting Prometheus metrics"},{"depth":3,"value":"Pre-built dashboards for workloads with Prometheus metrics"},{"depth":3,"value":"Export Prometheus metrics format"}]}},"pageContext":{"slug":"/docs/getting-started/container-insights/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/container-insights.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}