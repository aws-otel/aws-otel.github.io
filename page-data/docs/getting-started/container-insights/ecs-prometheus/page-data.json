{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/container-insights/ecs-prometheus",
    "result": {"data":{"mdx":{"id":"a0e14865-f3d5-567b-84c9-19fb7fe967b2","excerpt":"Overview To collect Prometheus metrics from tasks running on ECS and send it to CloudWatch using AWS Distro for OpenTelemetry Collector (ADOT).\nYou can eitherâ€¦","fields":{"slug":"/docs/getting-started/container-insights/ecs-prometheus/"},"frontmatter":{"title":"Container Insights ECS Prometheus","description":"Container Insights ECS Prometheus discovers targets running on ECS EC2 and fargate. Workloads like NGINX, JMX comes with pre-built CloudWatch dashboard.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Container Insights ECS Prometheus\",\n  \"description\": \"Container Insights ECS Prometheus discovers targets running on ECS EC2 and fargate. Workloads like NGINX, JMX comes with pre-built CloudWatch dashboard.\",\n  \"path\": \"/docs/getting-started/container-insights/ecs-prometheus\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"GettingStarted / \", mdx(Link, {\n    to: \"/docs/getting-started/container-insights\",\n    mdxType: \"Link\"\n  }, \"Container Insights\"), \" / \", mdx(Link, {\n    to: \"/docs/getting-started/container-insights#collecting-prometheus-metrics\",\n    mdxType: \"Link\"\n  }, \"Container Insights for Prometheus Support\")), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Overview\"), mdx(\"p\", null, \"To collect Prometheus metrics from tasks running on ECS and send it to CloudWatch using AWS Distro for OpenTelemetry Collector (ADOT).\\nYou can either run the collector as a sidecar or deploy the collector as its own ECS service for entire cluster.\\nTo use the pre-built dashboard in CloudWatch, you need to run a single collector for the entire cluster to attach task and service metadata.\\nECS tasks with Prometheus endpoints are discovered using extension \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/observer/ecsobserver\"\n  }, \"ecsobserver\"), \".\\n(Unlike EKS, there is no builtin discovery for ECS \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/prometheus/prometheus/tree/main/discovery/aws\"\n  }, \"inside prometheus\"), \")\"), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"p\", null, \"Follow these steps to run the ADOT Collector and Prometheus workload on ECS. You can skip some of them if you already have clusters or tasks running.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create an ECS cluster based on \", mdx(Link, {\n    to: \"/docs/setup/ecs/create-cluster\",\n    mdxType: \"Link\"\n  }, \"tutorial\"), \" or follow Appendix to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#create-ecs-cluster-with-ec2-instances\"\n  }, \"Create ECS cluster with EC2 instances using ecs-cli\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create \", mdx(Link, {\n    to: \"/docs/setup/ecs/create-iam-role\",\n    mdxType: \"Link\"\n  }, \"IAM role\"), \" and configure \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#iam-policy\"\n  }, \"IAM policy\"), \". Discovery tasks requires extra ECS policies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#configuration\"\n  }, \"Configuration\"), \" as an \", mdx(Link, {\n    to: \"/docs/setup/ecs/config-through-ssm\",\n    mdxType: \"Link\"\n  }, \"SSM parameter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#ecs-task-definition\"\n  }, \"ECS Task Definition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deploy \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#deploy-collector\"\n  }, \"ADOT Collector\"), \" as a replica service with 1 replica\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deploy \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#sample-workloads\"\n  }, \"sample workloads\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#view-logs-and-metrics-in-the-cloudwatch-console\"\n  }, \"View logs and metrics in the CloudWatch console\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#view-pre-built-cloudwatch-dashboards\"\n  }, \"View pre-built CloudWatch dashboards\"))), mdx(\"h2\", {\n    \"id\": \"permission\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#permission\",\n    \"aria-label\": \"permission permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Permission\"), mdx(\"p\", null, \"For discovering ECS tasks, you need to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#iam-policy\"\n  }, \"config IAM policy\"), \". For scraping discovered targets, you need to\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#network\"\n  }, \"configure network\")), mdx(\"h3\", {\n    \"id\": \"iam-policy\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#iam-policy\",\n    \"aria-label\": \"iam policy permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"IAM Policy\"), mdx(\"p\", null, \"Extra IAM policies are required to discover ECS tasks with Prometheus metrics.\\nThe full document with  \", mdx(Link, {\n    to: \"/docs/setup/ecs/create-iam-policy\",\n    mdxType: \"Link\"\n  }, \"existing polices\"), \" is included in the appendix \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#iam-policy-document\"\n  }, \"IAM Policy Document\"), \".\\nNOTE: The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EC2\"), \" policy is required if you use ECS EC2 with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bridge\"), \" network mode. You can remove it if all your tasks are fargate or uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awsvpc\"), \" network mode.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"ec2:DescribeInstances\\necs:ListTasks\\necs:ListServices\\necs:DescribeContainerInstances\\necs:DescribeServices\\necs:DescribeTasks\\necs:DescribeTaskDefinition\\n\")), mdx(\"h3\", {\n    \"id\": \"network\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#network\",\n    \"aria-label\": \"network permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Network\"), mdx(\"p\", null, \"For the ADOT Collector to scrape metrics, connectivity between ECS tasks using private ip is required.\\nDepends on how the cluster is created, you may need to configure security group to allow ingress within current VPC as prometheus \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pull\"), \" metrics.\\nThe default VPC's security group normally allows ingress within VPC out of box, while some CLI tools such as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#create-ecs-cluster-with-ec2-instances\"\n  }, \"ecs-cli\"), \"\\ncreates new VPC with stricter rules.\"), mdx(\"p\", null, \"When defining inbound rules, you can specify a strict port range if your task is using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awsvpc\"), \" as the network mode\\n(ECS Fargate only use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awsvpc\"), \"). However, for ECS bridge network mode (only on EC2), the host port is random\\nso you have to allow inbound on all TCP ports within the VPC.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Enable all TCP inbound within same VPC\\nSG=sg-123456\\naws ec2 authorize-security-group-ingress --group-id ${SG} --protocol tcp --port 0-65535 --source-group ${SG}\\n\")), mdx(\"h2\", {\n    \"id\": \"configuration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#configuration\",\n    \"aria-label\": \"configuration permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Configuration\"), mdx(\"p\", null, \"Configuring Container Insight Prometheus is similar to normal Prometheus pipeline.The overall flow of pipeline is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extension \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ecsobserver\"), \" call AWS API and write discovered targets to a file in a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector/blob/0134db77f6b4f1c8263e7423179a715cb233b485/cmd/awscollector/Dockerfile#L44\"\n  }, \"folder that already exists\"), \" such as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/etc/ecs_sd_targets.yaml\"), \".\\nA detailed explanation for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ecsobserver\"), \" config is in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/observer/ecsobserver\"\n  }, \"its source\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Prometheus receiver includes the output file from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ecsobserver\"), \" using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"file_sd\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prometheus relabel and EMF exporter's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"metric_declarations\"), \" transform and select the right set of labels as CloudWatch dimensions.\")), mdx(\"p\", null, \"A full example can be found in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector/tree/main/examples/ecs/aws-cloudwatch/ecs-container-insights-prometheus.yaml\"\n  }, \"examples/ecs/aws-cloudwatch/ecs-container-insights-prometheus.yaml\"), \".\\nIt contains discovery and metrics extraction rule for all \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#sample-workloads\"\n  }, \"workloads\"), \". NOTE: Remember to replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{{cluster_name}}\"), \" in the example file.\"), mdx(\"p\", null, \"Following is a small example for JMX and NGINX using service and docker label based discovery with inline comments.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"extensions:\\n  ecs_observer: # extension type is ecs_observer\\n    cluster_name: 'my-ecs-cluster' # cluster name need to configured manually\\n    cluster_region: 'us-west-2' # region can be configured directly or use AWS_REGION env var\\n    result_file: '/etc/ecs_sd_targets.yaml' # the directory for file must already exists\\n    refresh_interval: 60s # format is https://golang.org/pkg/time/#ParseDuration\\n    # custom name for 'job' so we can rename it back to 'job' using metricstransform processor\\n    job_label_name: prometheus_job\\n    # NGINX https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-Prometheus-Setup-nginx-ecs.html\\n    services:\\n      - name_pattern: '^.*nginx-service$' # NGINX\\n        metrics_ports:\\n          - 9113\\n        job_name: nginx-prometheus-exporter\\n    # JMX\\n    docker_labels:\\n      - port_label: 'ECS_PROMETHEUS_EXPORTER_PORT'\\n\\nreceivers:\\n  prometheus:\\n    config:\\n      scrape_configs:\\n        - job_name: \\\"ecssd\\\"\\n          file_sd_configs:\\n            - files:\\n                - '/etc/ecs_sd_targets.yaml' # MUST match the file name in ecs_observer.result_file\\n          relabel_configs: # Relabel here because label with __ prefix will be dropped by receiver.\\n            - source_labels: [ __meta_ecs_cluster_name ] # ClusterName\\n              action: replace\\n              target_label: ClusterName\\n            - source_labels: [ __meta_ecs_service_name ] # ServiceName\\n              action: replace\\n              target_label: ServiceName\\n            - source_labels: [ __meta_ecs_task_definition_family ] # TaskDefinitionFamily\\n              action: replace\\n              target_label: TaskDefinitionFamily\\n            - source_labels: [ __meta_ecs_task_launch_type ] # LaunchType\\n              action: replace\\n              target_label: LaunchType\\n            - source_labels: [ __meta_ecs_container_name ] # container_name\\n              action: replace\\n              target_label: container_name\\n            - action: labelmap # Convert docker labels on container to metric labels\\n              regex: ^__meta_ecs_container_labels_(.+)$ # Capture the key using regex, e.g. __meta_ecs_container_labels_Java_EMF_Metrics -> Java_EMF_Metrics\\n              replacement: '$$1'\\n\\nprocessors:\\n  resource:\\n    attributes:\\n      - key: receiver # Insert receiver: prometheus for CloudWatch EMF Exporter to add prom_metric_type\\n        value: \\\"prometheus\\\"\\n        action: insert\\n  metricstransform:\\n    transforms:\\n      - include: \\\".*\\\" # Rename customized job label back to job\\n        match_type: regexp\\n        action: update\\n        operations:\\n          - label: prometheus_job # must match the value configured in ecs_observer\\n            new_label: job\\n            action: update_label\\n\\nexporters:\\n  awsemf:\\n    namespace: ECS/ContainerInsights/Prometheus # Use the exact namespace for builtin dashboard to work\\n    log_group_name: \\\"/aws/ecs/containerinsights/my-ecs-cluster/prometheus\\\" # Log group name format is fixed as well, the only variable is cluster name\\n    dimension_rollup_option: NoDimensionRollup\\n    metric_declarations:\\n      # NGINX\\n      - dimensions: [ [ ClusterName, TaskDefinitionFamily, ServiceName ] ] # dimension names are same as our relabeled keys.\\n        label_matchers:\\n          - label_names:\\n              - ServiceName\\n            regex: '^.*nginx-service$'\\n        metric_name_selectors:\\n          - \\\"^nginx_.*$\\\"\\n      # JMX\\n      - dimensions: [ [ ClusterName, TaskDefinitionFamily, area ] ]\\n        label_matchers:\\n          - label_names:\\n              - Java_EMF_Metrics # Label in metrics comes from docker label in task definition\\n            regex: ^true$\\n        metric_name_selectors:\\n          - \\\"^jvm_memory_bytes_used$\\\"\\n\\nservice:\\n  extensions: [ ecs_observer ] # extension is declared outside pipelines\\n  pipelines:\\n    metrics:\\n      receivers: [ prometheus ]\\n      processors: [ resource, metricstransform ]\\n      exporters: [ awsemf ]\\n\")), mdx(\"h2\", {\n    \"id\": \"deploy-adot-collector\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#deploy-adot-collector\",\n    \"aria-label\": \"deploy adot collector permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy ADOT Collector\"), mdx(\"p\", null, \"ADOT Collector needs to run as single instance. We use the replica service because it handles task failure.\\nReplica is 1 otherwise we will have duplicated metrics.\\nIf you have a large cluster, you can shard the scrape targets using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hashmod\"), \" or use different discovery configurations for multiple collectors.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Run ADOT Collector as replica service on EC2\\n# https://docs.aws.amazon.com/cli/latest/reference/ecs/create-service.html\\naws ecs create-service \\\\\\n    --cluster my-ecs-cluster \\\\\\n    --service-name adot-ecs-prometheus \\\\\\n    --task-definition adot-ecs-prometheus:1 \\\\\\n    --desired-count 1\\n\")), mdx(\"p\", null, \"`\"), mdx(\"h2\", {\n    \"id\": \"sample-workloads\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#sample-workloads\",\n    \"aria-label\": \"sample workloads permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Sample Workloads\"), mdx(\"p\", null, \"There are four workloads with pre-built dashboards, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#jmx\"\n  }, \"JMX\"), \" is the easiest to get started with.\"), mdx(\"h3\", {\n    \"id\": \"jmx\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#jmx\",\n    \"aria-label\": \"jmx permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"JMX\"), mdx(\"p\", null, \"Details about example JMX workload can be found from CloudWatch docs \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-Prometheus-Sample-Workloads-ECS-javajmx.html\"\n  }, \"ECS JMX Sample\"), \"\\nand \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-Prometheus-metrics.html#ContainerInsights-Prometheus-metrics-jmx\"\n  }, \"ECS JMX Metrics Collected\")), mdx(\"p\", null, \"Our integration test also includes a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-test-framework/tree/terraform/sample-apps/jmx\"\n  }, \"sample java app\"), \".\"), mdx(\"h3\", {\n    \"id\": \"nginx\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#nginx\",\n    \"aria-label\": \"nginx permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"NGINX\"), mdx(\"p\", null, \"Detail about the example NGINX workload can be found from CloudWatch docs \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-Prometheus-Setup-nginx-ecs.html\"\n  }, \"ECS Nginx Sample\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nginxinc/nginx-prometheus-exporter\"\n  }, \"nginx-prometheus-exporter\"), \" is an open source project.\"), mdx(\"h3\", {\n    \"id\": \"nginx-plus\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#nginx-plus\",\n    \"aria-label\": \"nginx plus permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"NGINX Plus\"), mdx(\"p\", null, \"NGINX Plus is similar to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#nginx\"\n  }, \"NGINX\"), \" but requires subscription. Instruction for building image and run the workload can be found from CloudWatch docs \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-Prometheus-Setup-nginx-plus-ecs.html\"\n  }, \"Build Nginx Plus Image\")), mdx(\"h3\", {\n    \"id\": \"aws-app-mesh\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#aws-app-mesh\",\n    \"aria-label\": \"aws app mesh permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"AWS App Mesh\"), mdx(\"p\", null, \"CloudWatch docs has a simple walk through \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-Prometheus-Sample-Workloads-ECS-appmesh.html\"\n  }, \"ECS App Mesh Sample\"), \".\\nBe aware it's not easy to set up Mesh. All the metrics (used in dashboard) are collected from Envoy.\"), mdx(\"h2\", {\n    \"id\": \"view-logs-and-metrics-in-the-cloudwatch-console\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#view-logs-and-metrics-in-the-cloudwatch-console\",\n    \"aria-label\": \"view logs and metrics in the cloudwatch console permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"View logs and metrics in the CloudWatch console\"), mdx(\"p\", null, \"The log group is named after cluster. For example, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/aws/ecs/containerinsights/my-cluster/prometheus\"), \".\\nBy default, the log stream name is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"otel-stream\"), \" with a random suffix added.\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_aws\"), \" part in log defines which fields are going to be extracted as metrics dimensions.\\nYou can query all the fields using CloudWatch Logs \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html#matching-terms-events\"\n  }, \"filter pattern\"), \"\\nor \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html\"\n  }, \"Logs Insights\"), \".\"), mdx(\"img\", {\n    src: ecssdviewlog,\n    alt: \"cloudwatch console log\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), mdx(\"h2\", {\n    \"id\": \"view-pre-built-cloudwatch-dashboards\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#view-pre-built-cloudwatch-dashboards\",\n    \"aria-label\": \"view pre built cloudwatch dashboards permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"View pre-built CloudWatch dashboards\"), mdx(\"p\", null, \"Pre-built dashboards can be found from sidebar \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Insights\"), \" > \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Container Insights\"), \".\\nChoose \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Performance monitoring\"), \" from the drop-down and select your workload e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ECS Prometheus Java/JMX\"), \".\\nYou should find your cluster on the right dropdown.\"), mdx(\"img\", {\n    src: ecssdviewmertric,\n    alt: \"cloudwatch console metric\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), mdx(\"h2\", {\n    \"id\": \"appendix\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#appendix\",\n    \"aria-label\": \"appendix permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Appendix\"), mdx(\"h3\", {\n    \"id\": \"create-ecs-cluster-with-ec2-instances\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#create-ecs-cluster-with-ec2-instances\",\n    \"aria-label\": \"create ecs cluster with ec2 instances permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create ECS Cluster with EC2 instances\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Download \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/aws/amazon-ecs-cli#installing\"\n  }, \"ecs-cli\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new cluster, take note of the security group and subnet it created.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you missed it, you can still find it from CloudFormation console, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ecs-cli\"), \" generates CloudFormation and applies it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To make testing easier, update security group to allow ingress on all TCP port within the cluster, this makes testing easier.\\nHowever, you might want to only allow specific port when you use non bridge network mode. Bridge network mode assigns random host ports so you have to allow all.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Delete the cluster by either deleting the AWS CloudFormation stack or using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ecs-cli down -f -cluster ${CLUSTER_NAME}\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Create ECS EC2 cluster with 2 EC2 instances\\n\\nexport CLUSTER_NAME=aoc-containerinsight-prometheus-example\\necs-cli up --capability-iam --size 2 --instance-type t2.medium --cluster ${CLUSTER_NAME} --region us-west-2\\n\\n# Output is like\\n# INFO[0000] Using recommended Amazon Linux 2 AMI with ECS Agent 1.51.0 and Docker version 19.03.13-ce\\n# INFO[0001] Created cluster                               cluster=aoc-containerinsight-prometheus-example region=us-west-2\\n# INFO[0001] Waiting for your cluster resources to be created...\\n# INFO[0122] Cloudformation stack status                   stackStatus=CREATE_IN_PROGRESS\\n# VPC created: vpc-0fcxxxxx\\n# Security Group created: sg-04xxxxx\\n# Subnet created: subnet-03xxxx\\n# Subnet created: subnet-0exxxx\\n# Cluster creation succeeded.\\n\\n# Update security group to allow ingress on all ports within security group\\nSG=sg-04xxxxx\\naws ec2 authorize-security-group-ingress --group-id ${SG} --protocol tcp --port 0-65535 --source-group ${SG}\\naws ec2 describe-security-groups --group-ids ${SG}\\n\")), mdx(\"h3\", {\n    \"id\": \"iam-policy-document\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#iam-policy-document\",\n    \"aria-label\": \"iam policy document permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"IAM Policy Document\"), mdx(\"p\", null, \"Policy document merged from \", mdx(Link, {\n    to: \"/docs/setup/ecs/create-iam-policy\",\n    mdxType: \"Link\"\n  }, \"ECS setup guide\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#iam-policy\"\n  }, \"Extra IAM Policy\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n               \\\"logs:PutLogEvents\\\",\\n                \\\"logs:CreateLogGroup\\\",\\n                \\\"logs:CreateLogStream\\\",\\n                \\\"logs:DescribeLogStreams\\\",\\n                \\\"logs:DescribeLogGroups\\\",\\n                \\\"logs:PutRetentionPolicy\\\",\\n                \\\"xray:PutTraceSegments\\\",\\n                \\\"xray:PutTelemetryRecords\\\",\\n                \\\"xray:GetSamplingRules\\\",\\n                \\\"xray:GetSamplingTargets\\\",\\n                \\\"xray:GetSamplingStatisticSummaries\\\",\\n                \\\"cloudwatch:PutMetricData\\\",\\n                \\\"ec2:DescribeVolumes\\\",\\n                \\\"ec2:DescribeTags\\\",\\n                \\\"ssm:GetParameters\\\"\\n                \\\"ec2:DescribeInstances\\\",\\n                \\\"ecs:ListTasks\\\",\\n                \\\"ecs:ListServices\\\",\\n                \\\"ecs:DescribeContainerInstances\\\",\\n                \\\"ecs:DescribeServices\\\",\\n                \\\"ecs:DescribeTasks\\\",\\n                \\\"ecs:DescribeTaskDefinition\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        }\\n    ]\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"ecs-task-definition\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ecs-task-definition\",\n    \"aria-label\": \"ecs task definition permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"ECS Task Definition\"), mdx(\"p\", null, \"NOTE: You need to replace placeholder values with actual value\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The account id in the example is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"123456\"), \" and is used in ARN for taskRole and executionRole, replace it with your own AWS account id.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"amazon/aws-otel-collector:v0.11.0\"), \" is using dockerhub (potential throttle) and you can use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"latest\"), \" tag if you don't want to lock version.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Collecting infrastructure metrics requires running ADOT Collector with root access and this can be configured through \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"user\"), \" in the container definition.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/aoc/ecs-prometheus\"), \" is the name of \", mdx(Link, {\n    to: \"/docs/setup/ecs/config-through-ssm\",\n    mdxType: \"Link\"\n  }, \"SSM parameter\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"networkMode\"), \" can be \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bridge\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"awsvpc\"), \". For fargate, it has to be \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"awsvpc\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"logConfiguration\"), \" is for log from ADOT Collector itself. Log groups for metrics/log collected by collector is configured using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AOT_CONFIG_CONTENT\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"requiresCompatibilities\"), \" includes both EC2 and Fargate because ADOT Collector is scraping metrics via HTTP and does not need special host level access.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cpu\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"memory\"), \" must follow \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html\"\n  }, \"Fargate's requirement\"), \"\\ne.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cpu 255 memory 511\"), \" is invalid pair.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"family\\\": \\\"adot-ecs-prometheus\\\",\\n  \\\"taskRoleArn\\\": \\\"arn:aws:iam::123456:role/MyEcsTaskRole\\\",\\n  \\\"executionRoleArn\\\": \\\"arn:aws:iam::123456:role/MyEcsTaskExecutionRole\\\",\\n  \\\"networkMode\\\": \\\"bridge\\\",\\n  \\\"containerDefinitions\\\": [\\n    {\\n      \\\"name\\\": \\\"adot\\\",\\n      \\\"image\\\": \\\"amazon/aws-otel-collector:v0.11.0\\\",\\n      \\\"user\\\": \\\"root\\\",\\n      \\\"secrets\\\": [\\n        {\\n          \\\"name\\\": \\\"AOT_CONFIG_CONTENT\\\",\\n          \\\"valueFrom\\\": \\\"/aoc/ecs-prometheus\\\"\\n        }\\n      ],\\n      \\\"logConfiguration\\\": {\\n        \\\"logDriver\\\": \\\"awslogs\\\",\\n        \\\"options\\\": {\\n          \\\"awslogs-create-group\\\": \\\"True\\\",\\n          \\\"awslogs-group\\\": \\\"/adot/collector\\\",\\n          \\\"awslogs-region\\\": \\\"us-west-2\\\",\\n          \\\"awslogs-stream-prefix\\\": \\\"ecs-prometheus\\\"\\n        }\\n      }\\n    }\\n  ],\\n  \\\"requiresCompatibilities\\\": [\\n    \\\"EC2\\\",\\n    \\\"FARGATE\\\"\\n  ],\\n  \\\"cpu\\\": \\\"256\\\",\\n  \\\"memory\\\": \\\"512\\\"\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Overview"},{"depth":2,"value":"Steps"},{"depth":2,"value":"Permission"},{"depth":3,"value":"IAM Policy"},{"depth":3,"value":"Network"},{"depth":2,"value":"Configuration"},{"depth":2,"value":"Deploy ADOT Collector"},{"depth":2,"value":"Sample Workloads"},{"depth":3,"value":"JMX"},{"depth":3,"value":"NGINX"},{"depth":3,"value":"NGINX Plus"},{"depth":3,"value":"AWS App Mesh"},{"depth":2,"value":"View logs and metrics in the CloudWatch console"},{"depth":2,"value":"View pre-built CloudWatch dashboards"},{"depth":2,"value":"Appendix"},{"depth":3,"value":"Create ECS Cluster with EC2 instances"},{"depth":3,"value":"IAM Policy Document"},{"depth":3,"value":"ECS Task Definition"}]}},"pageContext":{"slug":"/docs/getting-started/container-insights/ecs-prometheus/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/container-insights/ecs-prometheus.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}