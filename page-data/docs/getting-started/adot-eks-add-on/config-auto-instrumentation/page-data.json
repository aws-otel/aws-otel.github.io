{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/adot-eks-add-on/config-auto-instrumentation",
    "result": {"data":{"mdx":{"id":"1d179a00-55a1-5055-b578-73d05635f16d","excerpt":"OpenTelemetry auto-instrumentation injection The ADOT EKS Add-on can inject and configure OpenTelemetry auto-instrumentation libraries. To enable this featureâ€¦","fields":{"slug":"/docs/getting-started/adot-eks-add-on/config-auto-instrumentation/"},"frontmatter":{"title":"OpenTelemetry auto-instrumentation injection","description":"This page describes how to inject a auto-instrumentation image into your workload","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"OpenTelemetry auto-instrumentation injection\",\n  \"description\": \"This page describes how to inject a auto-instrumentation image into your workload\",\n  \"path\": \"/docs/getting-started/adot-eks-add-on/config-auto-instrumentation\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"opentelemetry-auto-instrumentation-injection\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#opentelemetry-auto-instrumentation-injection\",\n    \"aria-label\": \"opentelemetry auto instrumentation injection permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"OpenTelemetry auto-instrumentation injection\"), mdx(\"p\", null, \"The ADOT EKS Add-on can inject and configure OpenTelemetry auto-instrumentation libraries. To enable this feature, you have to\\nannotate your workload with:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"instrumentation.opentelemetry.io/inject-<language>: true\\n\")), mdx(\"p\", null, \"Languages that support injection are: java, nodejs, python and dotnet.\"), mdx(\"p\", null, \"The annotation can be added to a namespace, so that all pods within that namespace will get instrumentation, or by adding\\nthe annotation to individual PodSpec objects, available as part of Deployment, Statefulset, and other resources.\"), mdx(\"p\", null, \"Example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"apiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: my-deployment-with-multiple-containers\\nspec:\\n  selector:\\n    matchLabels:\\n      app: my-pod-with-multiple-containers\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: my-pod-with-multiple-containers\\n      annotations:\\n        instrumentation.opentelemetry.io/inject-java: \\\"true\\\"\\n    spec:\\n      containers:\\n      - name: myapp\\n        image: myImage1\\n\")), mdx(\"h2\", {\n    \"id\": \"configuring-the-auto-instrumentation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#configuring-the-auto-instrumentation\",\n    \"aria-label\": \"configuring the auto instrumentation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Configuring the auto-instrumentation\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Instrumentation\"), \" custom resource definition (CRD) can be used to select the auto-instrumentation version that will be injected into the workload. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Instrumentation\"), \" CRD can also be used to configure auto-instrumentation agents. For more information on how to configure auto-instrumentation injection please refer to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-operator/tree/main#opentelemetry-auto-instrumentation-injection\"\n  }, \"OpenTelemetry Documentation\"), \".\"), mdx(\"p\", null, \"In the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Instrumentation\"), \" CRD you can define the collector endpoint used to submit the telemetry data and the images used\\nfor each language:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"apiVersion: opentelemetry.io/v1alpha1\\nkind: Instrumentation\\nmetadata:\\n  name: my-instrumentation\\nspec:\\n  exporter:\\n    endpoint: <endpoint>\\n  java:\\n    image: <image>\\n\")), mdx(\"p\", null, \"Below we can find an example with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"endpoint\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"image\"), \" fields populated:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"apiVersion: opentelemetry.io/v1alpha1\\nkind: Instrumentation\\nmetadata:\\n  name: my-instrumentation\\nspec:\\n  exporter:\\n    endpoint: http://adot-collector:4317\\n  java:\\n    image: public.ecr.aws/aws-observability/adot-autoinstrumentation-java:v1.31.1\\n\")), mdx(\"p\", null, \"In the example above, we are configuring the endpoint that will be used to submit the telemetry signals to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://adot-collector:4317\"), \". If the workload\\nalready has the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OTEL_EXPORTER_OTLP_ENDPOINT\"), \" environment defined, that will be used instead. In the example\\nwe are also configuring the version of the ADOT Java Agent that should be used to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public.ecr.aws/aws-observability/adot-autoinstrumentation-java:v1.31.1\"), \".\"), mdx(\"p\", null, \"For detailed information on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Instrumentation\"), \" CRD  please refer to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-operator/blob/main/docs/api.md#instrumentation\"\n  }, \"OpenTelemetry Instrumentation Spec\"), \".\"), mdx(\"h2\", {\n    \"id\": \"previous-topic-collector-configuration-introduction\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#previous-topic-collector-configuration-introduction\",\n    \"aria-label\": \"previous topic collector configuration introduction permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/config-collector-intro\"\n  }, \"Previous Topic: Collector Configuration Introduction\")), mdx(\"h2\", {\n    \"id\": \"next-topic-kubernetes-attributes-processor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#next-topic-kubernetes-attributes-processor\",\n    \"aria-label\": \"next topic kubernetes attributes processor permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/k8s-attr-processor\"\n  }, \"Next Topic: Kubernetes Attributes Processor\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"OpenTelemetry auto-instrumentation injection"},{"depth":2,"value":"Configuring the auto-instrumentation"},{"depth":2,"value":"Previous Topic: Collector Configuration Introduction"},{"depth":2,"value":"Next Topic: Kubernetes Attributes Processor"}]}},"pageContext":{"slug":"/docs/getting-started/adot-eks-add-on/config-auto-instrumentation/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/adot-eks-add-on/config-auto-instrumentation.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}