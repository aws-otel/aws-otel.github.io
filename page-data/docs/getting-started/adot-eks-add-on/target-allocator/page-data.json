{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/adot-eks-add-on/target-allocator",
    "result": {"data":{"mdx":{"id":"dac4b2d2-8ea5-5bfd-851a-af10a8c8454a","excerpt":"Installing the EKS Add-on gives you access to the Target Allocator (TA). Enabling the Target Allocator for an\nOpenTelemetry Collector custom resource decouplesâ€¦","fields":{"slug":"/docs/getting-started/adot-eks-add-on/target-allocator/"},"frontmatter":{"title":"Target Allocator","description":"This page provides an introduction to the Target Allocator","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Target Allocator\",\n  \"description\": \"This page provides an introduction to the Target Allocator\",\n  \"path\": \"/docs/getting-started/adot-eks-add-on/target-allocator\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Installing the EKS Add-on gives you access to the Target Allocator (TA). Enabling the Target Allocator for an\\nOpenTelemetry Collector custom resource decouples Prometheus service discovery and metrics collection. When enabled,\\nthe Target Allocator manages the configuration of the Prometheus receiver. Specifically,\\nthe Target Allocator allows for distribution of Prometheus scrape targets across a pool of Collectors. This functionality can\\nbe used to avoid the manual sharding of Prometheus scrape targets that can be required when horizontally scaling\\na single Prometheus receiver configuration.\\nVisit the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-operator/blob/main/cmd/otel-allocator/README.md\"\n  }, \"Target Allocator Readme\"), \"\\nfor a deeper introduction. \"), mdx(\"h2\", {\n    \"id\": \"out-of-order-samples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#out-of-order-samples\",\n    \"aria-label\": \"out of order samples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Out of Order Samples\"), mdx(\"p\", null, \"In some cases the Target Allocator can be used to solve Prometheus remote write out of order sample errors. A common\\nreason Collector users will see out of order sample erorrs is due to multiple collectors scraping the same metric\\nendpoint. Collector users may experience this when horizontally scaling Collectors with Prometheus\\nreceivers or daemonset deployments without manually sharding scrape targets. Both of these scenarios can lead to\\nout of order sample erorrs without sharding of Prometheus scrape targets.\"), mdx(\"h2\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Getting Started\"), mdx(\"p\", null, \"Enabling the target allocator requires setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenTelemeteryCollector.spec.targetAllocator.enabled\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\\nThis will cause the Prometheus configuration within the Collector CRD to be rewritten to use an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http_sd_config\"), \"\\nfrom the Target Allocator. The operator will also create a new deployment and service for this http_sd_config\\ndirective.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"apiVersion: opentelemetry.io/v1alpha1\\nkind: OpenTelemetryCollector\\nmetadata:\\n  name: collector-with-ta\\nspec:\\n  mode: statefulset\\n  servicAccount: adot-collector\\n  targetAllocator:\\n    enabled: true\\n  config: |\\n    receivers:\\n      prometheus:\\n        config:\\n          scrape_configs:\\n          - job_name: 'otel-collector'\\n            scrape_interval: 10s\\n            static_configs:\\n            - targets: [ '0.0.0.0:8888' ]\\n            metric_relabel_configs:\\n            - action: labeldrop\\n              regex: (id|name)\\n              replacement: $$1\\n            - action: labelmap\\n              regex: label_(.+)\\n              replacement: $$1\\n    \\n    processors:\\n      batch:\\n\\n    exporters:\\n      prometheusremotewrite:\\n        endpoint: ${AMP_REMOTE_WRITE_URL}\\n        auth:\\n          authenticator: sigv4auth\\n    \\n    extensions:\\n      sigv4auth:\\n        region: ${AWS_REGION}\\n        service: \\\"aps\\\"\\n\\n\\n    service:\\n      pipelines:\\n        metrics:\\n          receivers: [prometheus]\\n          processors: [batch]\\n          exporters: [prometheusremotewrite]\\n\")), mdx(\"p\", null, \"Please reference the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-operator/tree/main#target-allocator\"\n  }, \"OpenTelemetry Operator documentation\"), \"\\nfor more information on using the Target Allocator. \"), mdx(\"h3\", {\n    \"id\": \"useful-links\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#useful-links\",\n    \"aria-label\": \"useful links permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Useful links\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-operator/blob/main/docs/api.md#opentelemetrycollectorspectargetallocator\"\n  }, \"Target Allocator API Spec\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://opentelemetry.io/docs/collector/scaling/\"\n  }, \"Scaling OpenTelmetery Collectors\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"previous-topic-kubernetes-attributes-processor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#previous-topic-kubernetes-attributes-processor\",\n    \"aria-label\": \"previous topic kubernetes attributes processor permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/k8s-attr-processor\"\n  }, \"Previous Topic: Kubernetes Attributes Processor\")), mdx(\"h2\", {\n    \"id\": \"next-topic-updating-and-cleanup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#next-topic-updating-and-cleanup\",\n    \"aria-label\": \"next topic updating and cleanup permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/update-and-cleanup\"\n  }, \"Next Topic: Updating and Cleanup\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Out of Order Samples"},{"depth":2,"value":"Getting Started"},{"depth":3,"value":"Useful links"},{"depth":2,"value":"Previous Topic: Kubernetes Attributes Processor"},{"depth":2,"value":"Next Topic: Updating and Cleanup"}]}},"pageContext":{"slug":"/docs/getting-started/adot-eks-add-on/target-allocator/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/adot-eks-add-on/target-allocator.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}