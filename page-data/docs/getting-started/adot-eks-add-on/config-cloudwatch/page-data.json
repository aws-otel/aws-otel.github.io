{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/adot-eks-add-on/config-cloudwatch",
    "result": {"data":{"mdx":{"id":"d2d50cf1-d89d-598a-97af-99d437f3979f","excerpt":"Collector Configuration The Collector configuration below is set up to receive Prometheus metrics and export to CloudWatch. Note that the Prometheus receiverâ€¦","fields":{"slug":"/docs/getting-started/adot-eks-add-on/config-cloudwatch/"},"frontmatter":{"title":"Collector Configuration for Amazon CloudWatch","description":"This page introduces Collector configuration for Amazon CloudWatch for the ADOT Collector.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Collector Configuration for Amazon CloudWatch\",\n  \"description\": \"This page introduces Collector configuration for Amazon CloudWatch for the ADOT Collector.\",\n  \"path\": \"/docs/getting-started/adot-eks-add-on/config-cloudwatch\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"collector-configuration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#collector-configuration\",\n    \"aria-label\": \"collector configuration permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Collector Configuration\"), mdx(\"p\", null, \"The Collector configuration below is set up to receive Prometheus metrics and export to CloudWatch. Note that the Prometheus receiver configuration is identical to that of the configuration for the Amazon Managed Prometheus Collector configuration. The AWS CloudWatch EMF Exporter is used to convert the metrics data into performance log events with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format_Specification.html\"\n  }, \"Embedded Metric Format (EMF)\"), \" and then sends it directly to a CloudWatch log group using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\"\n  }, \"PutLogEvents\"), \" API. From this data, your metrics will be made available under the CloudWatch Metrics \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace\"\n  }, \"namespace\"), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ContainerInsights/Prometheus\"), \" with the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension\"\n  }, \"dimensions\"), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"EKS_Cluster\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"EKS_Namespace\"), \", and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"EKS_PodName\"), \" per the exporter configuration settings. Note that the file below is also hosted \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-community/blob/master/sample-configs/operator/collector-config-cloudwatch.yaml\"\n  }, \"here\"), \". Save this into a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"collector-config-cloudwatch.yaml\"), \" and execute the command\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"kubectl apply -f collector-config-cloudwatch.yaml\\n\")), mdx(\"p\", null, \"to deploy your Collector. Make sure to replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<YOUR-EKS-CLUSTER-NAME>\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec::env\"), \" section and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<YOUR_AWS_REGION>\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awsemf\"), \" exporter config, as per your own target environment. Note that a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClusterRole\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClusterRoleBinding\"), \" will also be created, which provide necessary permissions for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prometheus\"), \" receiver during service discovery.\"), mdx(\"details\", null, mdx(\"summary\", null, \"Click to View: Collector Configuration for Amazon CloudWatch\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"#\\n# OpenTelemetry Collector configuration\\n# Metrics pipeline with Prometheus Receiver and AWS CloudWatch EMF Exporter sending metrics to CloudWatch\\n# \\n---\\napiVersion: opentelemetry.io/v1alpha1\\nkind: OpenTelemetryCollector\\nmetadata:\\n  name: my-collector-cloudwatch\\nspec:\\n  mode: deployment\\n  serviceAccount: adot-collector\\n  podAnnotations:\\n    prometheus.io/scrape: 'true'\\n    prometheus.io/port: '8888'\\n  env:\\n    - name: CLUSTER_NAME\\n      value: <YOUR-EKS-CLUSTER-NAME>\\n  config: |\\n    receivers:\\n      #\\n      # Scrape configuration for the Prometheus Receiver\\n      # This is the same configuration used when Prometheus is installed using the community Helm chart\\n      #     \\n      prometheus:\\n        config:\\n          global:\\n            scrape_interval: 15s\\n            scrape_timeout: 10s\\n\\n          scrape_configs:\\n          - job_name: kubernetes-apiservers\\n            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n            kubernetes_sd_configs:\\n            - role: endpoints\\n            relabel_configs:\\n            - action: keep\\n              regex: default;kubernetes;https\\n              source_labels:\\n              - __meta_kubernetes_namespace\\n              - __meta_kubernetes_service_name\\n              - __meta_kubernetes_endpoint_port_name\\n            scheme: https\\n            tls_config:\\n              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n              insecure_skip_verify: true\\n\\n          - job_name: kubernetes-nodes\\n            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n            kubernetes_sd_configs:\\n            - role: node\\n            relabel_configs:\\n            - action: labelmap\\n              regex: __meta_kubernetes_node_label_(.+)\\n            - replacement: kubernetes.default.svc:443\\n              target_label: __address__\\n            - regex: (.+)\\n              replacement: /api/v1/nodes/$$1/proxy/metrics\\n              source_labels:\\n              - __meta_kubernetes_node_name\\n              target_label: __metrics_path__\\n            scheme: https\\n            tls_config:\\n              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n              insecure_skip_verify: true\\n\\n          - job_name: kubernetes-nodes-cadvisor\\n            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n            kubernetes_sd_configs:\\n            - role: node\\n            relabel_configs:\\n            - action: labelmap\\n              regex: __meta_kubernetes_node_label_(.+)\\n            - replacement: kubernetes.default.svc:443\\n              target_label: __address__\\n            - regex: (.+)\\n              replacement: /api/v1/nodes/$$1/proxy/metrics/cadvisor\\n              source_labels:\\n              - __meta_kubernetes_node_name\\n              target_label: __metrics_path__\\n            scheme: https\\n            tls_config:\\n              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n              insecure_skip_verify: true\\n\\n          - job_name: kubernetes-service-endpoints\\n            kubernetes_sd_configs:\\n            - role: endpoints\\n            relabel_configs:\\n            - action: keep\\n              regex: true\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_scrape\\n            - action: replace\\n              regex: (https?)\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_scheme\\n              target_label: __scheme__\\n            - action: replace\\n              regex: (.+)\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_path\\n              target_label: __metrics_path__\\n            - action: replace\\n              regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n              replacement: $$1:$$2\\n              source_labels:\\n              - __address__\\n              - __meta_kubernetes_service_annotation_prometheus_io_port\\n              target_label: __address__\\n            - action: labelmap\\n              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\\n              replacement: __param_$$1\\n            - action: labelmap\\n              regex: __meta_kubernetes_service_label_(.+)\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_namespace\\n              target_label: kubernetes_namespace\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_service_name\\n              target_label: kubernetes_name\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_pod_node_name\\n              target_label: kubernetes_node\\n\\n          - job_name: kubernetes-service-endpoints-slow\\n            kubernetes_sd_configs:\\n            - role: endpoints\\n            relabel_configs:\\n            - action: keep\\n              regex: true\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow\\n            - action: replace\\n              regex: (https?)\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_scheme\\n              target_label: __scheme__\\n            - action: replace\\n              regex: (.+)\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_path\\n              target_label: __metrics_path__\\n            - action: replace\\n              regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n              replacement: $$1:$$2\\n              source_labels:\\n              - __address__\\n              - __meta_kubernetes_service_annotation_prometheus_io_port\\n              target_label: __address__\\n            - action: labelmap\\n              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\\n              replacement: __param_$$1\\n            - action: labelmap\\n              regex: __meta_kubernetes_service_label_(.+)\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_namespace\\n              target_label: kubernetes_namespace\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_service_name\\n              target_label: kubernetes_name\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_pod_node_name\\n              target_label: kubernetes_node\\n            scrape_interval: 5m\\n            scrape_timeout: 30s\\n            \\n          - job_name: prometheus-pushgateway\\n            kubernetes_sd_configs:\\n            - role: service\\n            relabel_configs:\\n            - action: keep\\n              regex: pushgateway\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_probe\\n\\n          - job_name: kubernetes-services\\n            kubernetes_sd_configs:\\n            - role: service\\n            metrics_path: /probe\\n            params:\\n              module:\\n              - http_2xx\\n            relabel_configs:\\n            - action: keep\\n              regex: true\\n              source_labels:\\n              - __meta_kubernetes_service_annotation_prometheus_io_probe\\n            - source_labels:\\n              - __address__\\n              target_label: __param_target\\n            - replacement: blackbox\\n              target_label: __address__\\n            - source_labels:\\n              - __param_target\\n              target_label: instance\\n            - action: labelmap\\n              regex: __meta_kubernetes_service_label_(.+)\\n            - source_labels:\\n              - __meta_kubernetes_namespace\\n              target_label: kubernetes_namespace\\n            - source_labels:\\n              - __meta_kubernetes_service_name\\n              target_label: kubernetes_name\\n\\n          - job_name: kubernetes-pods\\n            kubernetes_sd_configs:\\n            - role: pod\\n            relabel_configs:\\n            - action: keep\\n              regex: true\\n              source_labels:\\n              - __meta_kubernetes_pod_annotation_prometheus_io_scrape\\n            - action: replace\\n              regex: (https?)\\n              source_labels:\\n              - __meta_kubernetes_pod_annotation_prometheus_io_scheme\\n              target_label: __scheme__\\n            - action: replace\\n              regex: (.+)\\n              source_labels:\\n              - __meta_kubernetes_pod_annotation_prometheus_io_path\\n              target_label: __metrics_path__\\n            - action: replace\\n              regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n              replacement: $$1:$$2\\n              source_labels:\\n              - __address__\\n              - __meta_kubernetes_pod_annotation_prometheus_io_port\\n              target_label: __address__\\n            - action: labelmap\\n              regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\\n              replacement: __param_$$1\\n            - action: labelmap\\n              regex: __meta_kubernetes_pod_label_(.+)\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_namespace\\n              target_label: kubernetes_namespace\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_pod_name\\n              target_label: kubernetes_pod_name\\n            - action: drop\\n              regex: Pending|Succeeded|Failed|Completed\\n              source_labels:\\n              - __meta_kubernetes_pod_phase\\n              \\n          - job_name: kubernetes-pods-slow\\n            scrape_interval: 5m\\n            scrape_timeout: 30s          \\n            kubernetes_sd_configs:\\n            - role: pod\\n            relabel_configs:\\n            - action: keep\\n              regex: true\\n              source_labels:\\n              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\\n            - action: replace\\n              regex: (https?)\\n              source_labels:\\n              - __meta_kubernetes_pod_annotation_prometheus_io_scheme\\n              target_label: __scheme__\\n            - action: replace\\n              regex: (.+)\\n              source_labels:\\n              - __meta_kubernetes_pod_annotation_prometheus_io_path\\n              target_label: __metrics_path__\\n            - action: replace\\n              regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n              replacement: $$1:$$2\\n              source_labels:\\n              - __address__\\n              - __meta_kubernetes_pod_annotation_prometheus_io_port\\n              target_label: __address__\\n            - action: labelmap\\n              regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\\n              replacement: __param_$1\\n            - action: labelmap\\n              regex: __meta_kubernetes_pod_label_(.+)\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_namespace\\n              target_label: namespace\\n            - action: replace\\n              source_labels:\\n              - __meta_kubernetes_pod_name\\n              target_label: pod\\n            - action: drop\\n              regex: Pending|Succeeded|Failed|Completed\\n              source_labels:\\n              - __meta_kubernetes_pod_phase              \\n                                                            \\n    processors:\\n      batch/metrics:\\n        timeout: 60s       \\n      #\\n      # Processor to transform the names of existing labels and/or add new labels to the metrics identified\\n      # \\n      metricstransform/labelling:\\n        transforms:\\n          - include: .*\\n            match_type: regexp\\n            action: update\\n            operations:\\n              - action: add_label\\n                new_label: EKS_Cluster\\n                new_value: ${CLUSTER_NAME}\\n              - action: update_label\\n                label: kubernetes_pod_name\\n                new_label: EKS_PodName\\n              - action: update_label\\n                label: kubernetes_namespace\\n                new_label: EKS_Namespace\\n\\n    exporters:\\n      #\\n      # AWS EMF exporter that sends metrics data as performance log events to CloudWatch\\n      # Only the metrics that were filtered out by the processors get to this stage of the pipeline\\n      # Under the metric_declarations field, add one or more sets of CloudWatch dimensions\\n      # Each dimension must alredy exist as a label on the Prometheus metric\\n      # For each set of dimensions, add a list of metrics under the metric_name_selectors field\\n      # Metrics names may be listed explicitly or using regular expressions\\n      # Data from performance log events will be aggregated by CloudWatch using these dimensions to create a CloudWatch custom metric\\n      #    \\n      awsemf:\\n        region: <YOUR_AWS_REGION>\\n        namespace: ContainerInsights/Prometheus\\n        log_group_name: '/aws/containerinsights/${CLUSTER_NAME}/prometheus'\\n        resource_to_telemetry_conversion:\\n          enabled: true\\n        dimension_rollup_option: NoDimensionRollup\\n        parse_json_encoded_attr_values: [Sources, kubernetes]\\n        metric_declarations:\\n          - dimensions: [[EKS_Cluster, EKS_Namespace, EKS_PodName]]\\n            metric_name_selectors:\\n              - apiserver_request_.*\\n              - container_memory_.*\\n              - container_threads\\n              - otelcol_process_.*\\n    service:\\n      pipelines:\\n        metrics:\\n          receivers: [prometheus]\\n          processors: [batch/metrics,metricstransform/labelling]\\n          exporters: [awsemf]         \\n\\n\\n---\\napiVersion: rbac.authorization.k8s.io/v1\\nkind: ClusterRole\\nmetadata:\\n  name: otel-prometheus-role\\nrules:\\n  - apiGroups:\\n      - \\\"\\\"\\n    resources:\\n      - nodes\\n      - nodes/proxy\\n      - services\\n      - endpoints\\n      - pods\\n    verbs:\\n      - get\\n      - list\\n      - watch\\n  - apiGroups:\\n      - extensions\\n    resources:\\n      - ingresses\\n    verbs:\\n      - get\\n      - list\\n      - watch\\n  - nonResourceURLs:\\n      - /metrics\\n    verbs:\\n      - get\\n\\n---\\napiVersion: rbac.authorization.k8s.io/v1\\nkind: ClusterRoleBinding\\nmetadata:\\n  name: otel-prometheus-role-binding\\nroleRef:\\n  apiGroup: rbac.authorization.k8s.io\\n  kind: ClusterRole\\n  name: otel-prometheus-role\\nsubjects:\\n  - kind: ServiceAccount\\n    name: adot-collector\\n    namespace: default\\n\"))), mdx(\"h2\", {\n    \"id\": \"verify-if-the-metrics-data-is-being-sent-to-cloudwatch\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#verify-if-the-metrics-data-is-being-sent-to-cloudwatch\",\n    \"aria-label\": \"verify if the metrics data is being sent to cloudwatch permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Verify if the Metrics Data is being sent to CloudWatch\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://console.aws.amazon.com/cloudwatch/home\"\n  }, \"CloudWatch console\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select \\u201CMetrics \\u2192 All metrics\\u201D in the menu on the left\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click the \\u201CContainerInsights/Prometheus\\u201D box under \\u201Ccustom namespaces\\u201D\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select the \\u201CEKS_Cluster, EKS_Namespace, EKS_PodName\\u201C to view your metrics data\")), mdx(\"h2\", {\n    \"id\": \"previous-topic-collector-configuration-introduction\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#previous-topic-collector-configuration-introduction\",\n    \"aria-label\": \"previous topic collector configuration introduction permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/config-collector-intro\"\n  }, \"Previous Topic: Collector Configuration Introduction\")), mdx(\"h2\", {\n    \"id\": \"related-topics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-topics\",\n    \"aria-label\": \"related topics permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related Topics:\"), mdx(\"h3\", {\n    \"id\": \"collector-configuration-for-amazon-managed-prometheus\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#collector-configuration-for-amazon-managed-prometheus\",\n    \"aria-label\": \"collector configuration for amazon managed prometheus permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/config-amp\"\n  }, \"Collector Configuration for Amazon Managed Prometheus\")), mdx(\"h3\", {\n    \"id\": \"collector-configuration-for-aws-x-ray\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#collector-configuration-for-aws-x-ray\",\n    \"aria-label\": \"collector configuration for aws x ray permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/config-xray\"\n  }, \"Collector Configuration for AWS X-Ray\")), mdx(\"h3\", {\n    \"id\": \"advanced-collector-configuration-for-amazon-managed-prometheus\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#advanced-collector-configuration-for-amazon-managed-prometheus\",\n    \"aria-label\": \"advanced collector configuration for amazon managed prometheus permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/config-advanced\"\n  }, \"Advanced Collector Configuration for Amazon Managed Prometheus\")), mdx(\"h2\", {\n    \"id\": \"next-topic-updating-and-cleanup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#next-topic-updating-and-cleanup\",\n    \"aria-label\": \"next topic updating and cleanup permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/docs/getting-started/adot-eks-add-on/update-and-cleanup\"\n  }, \"Next Topic: Updating and Cleanup\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Collector Configuration"},{"depth":2,"value":"Verify if the Metrics Data is being sent to CloudWatch"},{"depth":2,"value":"Previous Topic: Collector Configuration Introduction"},{"depth":2,"value":"Related Topics:"},{"depth":3,"value":"Collector Configuration for Amazon Managed Prometheus"},{"depth":3,"value":"Collector Configuration for AWS X-Ray"},{"depth":3,"value":"Advanced Collector Configuration for Amazon Managed Prometheus"},{"depth":2,"value":"Next Topic: Updating and Cleanup"}]}},"pageContext":{"slug":"/docs/getting-started/adot-eks-add-on/config-cloudwatch/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/adot-eks-add-on/config-cloudwatch.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}