{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/lambda/lambda-java",
    "result": {"data":{"mdx":{"id":"e39b184f-c18c-567f-9837-ae6fb1ad2a7b","excerpt":"The AWS managed Lambda layer for ADOT Java provides a plug-and-play user experience by wrapping an AWS Lambda function, and by packaging the  OpenTelemetry Javaâ€¦","fields":{"slug":"/docs/getting-started/lambda/lambda-java/"},"frontmatter":{"title":"AWS Distro for OpenTelemetry Lambda Support For Java","description":"The AWS managed Lambda layer for ADOT Java provides a plug-and-play user experience by wrapping an AWS Lambda function, and by packaging the [OpenTelemetry Java SDK](https://aws-otel.github.io/docs/getting-started/java-sdk/trace-manual-instr) together with an out-of-the-box configuration for AWS Lambda and AWS X-Ray. Users can enable and disable OpenTelemetry for their Lambda function without changing code. With the ADOT Lambda Layer for Java, the wrapper has built-in support for instrumenting the AWS SDK automatically. For additional instrumenting functionality, see the documentation on [auto-instrumentation for traces](https://github.com/aws-observability/aws-otel-java-instrumentation/blob/main/README.md).","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"AWS Distro for OpenTelemetry Lambda Support For Java\",\n  \"description\": \"The AWS managed Lambda layer for ADOT Java provides a plug-and-play user experience by wrapping an AWS Lambda function, and by packaging the [OpenTelemetry Java SDK](https://aws-otel.github.io/docs/getting-started/java-sdk/trace-manual-instr) together with an out-of-the-box configuration for AWS Lambda and AWS X-Ray. Users can enable and disable OpenTelemetry for their Lambda function without changing code. With the ADOT Lambda Layer for Java, the wrapper has built-in support for instrumenting the AWS SDK automatically. For additional instrumenting functionality, see the documentation on [auto-instrumentation for traces](https://github.com/aws-observability/aws-otel-java-instrumentation/blob/main/README.md).\",\n  \"path\": \"/docs/getting-started/lambda/lambda-java\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The AWS managed Lambda layer for ADOT Java provides a plug-and-play user experience by wrapping an AWS Lambda function, and by packaging the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://aws-otel.github.io/docs/getting-started/java-sdk/trace-manual-instr\"\n  }, \"OpenTelemetry Java SDK\"), \" together with an out-of-the-box configuration for AWS Lambda and AWS X-Ray. Users can enable and disable OpenTelemetry for their Lambda function without changing code.\"), mdx(\"p\", null, \"With the ADOT Lambda Layer for Java, the wrapper has built-in support for instrumenting the AWS SDK automatically. For additional instrumenting functionality, see the documentation on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://aws-otel.github.io/docs/getting-started/java-sdk/trace-auto-instr\"\n  }, \"auto-instrumentation for traces\"), \".\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"requirements\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#requirements\",\n    \"aria-label\": \"requirements permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Requirements\"), mdx(\"p\", null, \"The Lambda layer supports Java\", \"[8, 11 and 17]\", \" Lambda runtimes. For more information about supported Java versions,\\nsee the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-java\"\n  }, \"OpenTelemetry Java documentation\"), \".\"), mdx(\"h3\", {\n    \"id\": \"add-the-arn-of-the-lambda-layer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#add-the-arn-of-the-lambda-layer\",\n    \"aria-label\": \"add the arn of the lambda layer permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Add the ARN of the Lambda Layer\"), mdx(\"p\", null, \"In this section, we consume the Lambda layer for use with Java Lambda Functions.\\nThis includes a reduced version of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector\"\n  }, \"AWS Distro for OpenTelemetry Collector (ADOT Collector)\"), \",\\nwhich runs as a Lambda extension.\"), mdx(\"p\", null, \"Note: Lambda layers are a regionalized resource, meaning that they can only be used in the Region in which they are published.\\nMake sure to use the layer in the same region as your Lambda functions.\"), mdx(\"p\", null, \"Find the supported regions and amd64/arm64 layer ARN in the table below for the ARNs to consume. Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"amd64\"), \" as architecture \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\"\n  }, \"for x86-based processors\"), \".\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Supported   Regions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Lambda layer ARN format\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Contents\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ap-northeast-1\", mdx(\"br\", null), \"ap-northeast-2\", mdx(\"br\", null), \"ap-south-1\", mdx(\"br\", null), \"ap-southeast-1\", mdx(\"br\", null), \"ap-southeast-2\", mdx(\"br\", null), \"ca-central-1\", mdx(\"br\", null), \"eu-central-1\", mdx(\"br\", null), \"eu-north-1\", mdx(\"br\", null), \"eu-west-1\", mdx(\"br\", null), \"eu-west-2\", mdx(\"br\", null), \"eu-west-3\", mdx(\"br\", null), \"sa-east-1\", mdx(\"br\", null), \"us-east-1\", mdx(\"br\", null), \"us-east-2\", mdx(\"br\", null), \"us-west-1\", mdx(\"br\", null), \"us-west-2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"arn:aws:lambda:<region\", \">\", \":901920570463:layer:aws-otel-java-wrapper-<architecture\", \">\", \"-ver-1-32-0:6\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Contains \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-java/releases/tag/v1.32.0\"\n  }, \"OpenTelemetry for Java v1.32.0\"), \" with \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-java-instrumentation/releases/tag/v1.32.0\"\n  }, \"Java Instrumentation v1.32.0\"), \" \", mdx(\"br\", null), mdx(\"br\", null), \" Contains ADOT Collector v0.43.0\")))), mdx(\"h3\", {\n    \"id\": \"enable-auto-instrumentation-for-your-lambda-function\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#enable-auto-instrumentation-for-your-lambda-function\",\n    \"aria-label\": \"enable auto instrumentation for your lambda function permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Enable auto-instrumentation for your Lambda function\"), mdx(\"p\", null, \"To enable the AWS Distro for OpenTelemetry in your Lambda function, you need to add and configure the layer, and then enable tracing.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open the Lambda function you intend to instrument in the AWS console.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Layers in Designer\"), \" section, choose \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Add a layer\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Under \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"specify an ARN\"), \", paste the layer ARN, and then choose \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Add\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add the environment variable \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWS_LAMBDA_EXEC_WRAPPER\"), \" and set it to one of the following options:\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/opt/otel-handler\"), \" - for wrapping regular handlers (implementing RequestHandler)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/opt/otel-proxy-handler\"), \" - for wrapping regular handlers (implementing RequestHandler) proxied through API Gateway, enabling HTTP context propagation\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/opt/otel-stream-handler\"), \" - for wrapping streaming handlers (implementing RequestStreamHandler), enabling HTTP context propagation for HTTP requests\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/opt/otel-sqs-handler\"), \" - for wrapping SQS-triggered function handlers (implementing RequestHandler)\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\"\n  }, \"Enable active tracing\"), \" for your AWS Lambda function.\")), mdx(\"p\", null, \"Tips:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"By default, the layer is configured to export traces to AWS X-Ray.\\nMake sure your Lambda role has the required AWS X-Ray permissions.\\nSee more on AWS X-Ray permissions for AWS Lambda, see the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html#services-xray-permissions\"\n  }, \"AWS Lambda documentation\"), \".\")), mdx(\"p\", null, \"Note: Inside the Java-Wrapper layer only the 1 kind of APIGW (APIGatewayProxyRequestEvent) event object is currently supported. The issue is currently being tracked \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-lambda/issues/270\"\n  }, \"here\")), mdx(\"h3\", {\n    \"id\": \"enable-additional-instrumentation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#enable-additional-instrumentation\",\n    \"aria-label\": \"enable additional instrumentation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Enable additional instrumentation\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/aws-sdk/aws-sdk-2.2/library\"\n  }, \"AWS SDK instrumentation\"), \"\\nis included and loaded automatically if you use the AWS SDK.\"), mdx(\"p\", null, \"However, for any other library, you will need to include the corresponding library instrumentation\\nfrom the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-java-instrumentation\"\n  }, \"OpenTelemetry instrumentation repository\"), \"\\nand modify your code to initialize it in your function. See the README.MD file for each library for additional information.\"), mdx(\"p\", null, \"You can see an example with OKHttp in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-lambda/tree/main/java#sample-applications\"\n  }, \"OpenTelemetry Lambda sample application\"), \".\"), mdx(\"h3\", {\n    \"id\": \"remove-opentelemetry-from-your-lambda-function\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#remove-opentelemetry-from-your-lambda-function\",\n    \"aria-label\": \"remove opentelemetry from your lambda function permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Remove OpenTelemetry from your Lambda function\"), mdx(\"p\", null, \"To disable OpenTelemetry for your Lambda function, remove the Lambda layer,\\nremove the environment \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variable AWS_LAMBDA_EXEC_WRAPPER\"), \", and disable active tracing, as explained in the section above.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"configuration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#configuration\",\n    \"aria-label\": \"configuration permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Configuration\"), mdx(\"p\", null, \"The AWS Lambda layer for ADOT Java combines both the ADOT Java SDK and the ADOT Collector.\\nThe configuration of the ADOT Collector follows the OpenTelemetry standard.\"), mdx(\"p\", null, \"By default, the ADOT Lambda layer uses the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/blob/main/adot/collector/config.yaml\"\n  }, \"config.yaml\"), \",\\nwhich exports telemetry data to AWS X-Ray. To customize the Collector config,\\nsee the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/getting-started/lambda#custom-configuration-for-the-adot-collector-on-lambda\"\n  }, \"main Lambda section for custom configuration instructions\")), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"additional-instrumentation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#additional-instrumentation\",\n    \"aria-label\": \"additional instrumentation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Additional Instrumentation\"), mdx(\"p\", null, \"For additional instrumentation, see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-java\"\n  }, \"OpenTelemetry Java documentation\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Requirements"},{"depth":3,"value":"Add the ARN of the Lambda Layer"},{"depth":3,"value":"Enable auto-instrumentation for your Lambda function"},{"depth":3,"value":"Enable additional instrumentation"},{"depth":3,"value":"Remove OpenTelemetry from your Lambda function"},{"depth":2,"value":"Configuration"},{"depth":2,"value":"Additional Instrumentation"}]}},"pageContext":{"slug":"/docs/getting-started/lambda/lambda-java/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/lambda/lambda-java.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}