{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/docs/getting-started/lambda/lambda-dotnet",
    "result": {"data":{"mdx":{"id":"a8757880-7ae9-55df-ba53-0f17e72154bc","excerpt":"The  OpenTelemetry Lambda instrumentation for .NET  provides extension and tracing APIs you can use to instrument your Lambda function. The ADOT Lambda layerâ€¦","fields":{"slug":"/docs/getting-started/lambda/lambda-dotnet/"},"frontmatter":{"title":"AWS Distro for OpenTelemetry Lambda Support For .NET","description":"The [AWS Distro for OpenTelemetry Lambda (ADOT Lambda) SDK for .NET](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.AWSLambda) provides extension and tracing APIs you can use to instrument your Lambda function. The ADOT Lambda layer provides a reduced version of the [AWS Distro for OpenTelemetry Collector](https://github.com/aws-observability/aws-otel-collector), which can further export OpenTelemetry spans to back-end servers.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"AWS Distro for OpenTelemetry Lambda Support For .NET\",\n  \"description\": \"The [AWS Distro for OpenTelemetry Lambda (ADOT Lambda) SDK for .NET](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.AWSLambda) provides extension and tracing APIs you can use to instrument your Lambda function. The ADOT Lambda layer provides a reduced version of the [AWS Distro for OpenTelemetry Collector](https://github.com/aws-observability/aws-otel-collector), which can further export OpenTelemetry spans to back-end servers.\",\n  \"path\": \"/docs/getting-started/lambda/lambda-dotnet\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.AWSLambda\"\n  }, \"OpenTelemetry Lambda instrumentation for .NET\"), \" provides extension and tracing APIs you can use to instrument your Lambda function. The ADOT Lambda layer provides a reduced version of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector\"\n  }, \"AWS Distro for OpenTelemetry Collector\"), \", which can further export OpenTelemetry spans to back-end servers.\"), mdx(\"p\", null, \"This chapter will walk you through the steps to manually instrument your Lambda function using the ADOT Lambda .NET SDK, and apply ADOT Lambda layer to enable end-to-end tracing.\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"instrumentation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#instrumentation\",\n    \"aria-label\": \"instrumentation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Instrumentation\"), mdx(\"h3\", {\n    \"id\": \"code-instrumentation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#code-instrumentation\",\n    \"aria-label\": \"code instrumentation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Code Instrumentation\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.nuget.org/packages/OpenTelemetry.Instrumentation.AWSLambda/\"\n  }, \"ADOT Lambda .NET SDK\"), \" package to your Lambda function.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"dotnet add package OpenTelemetry.Instrumentation.AWSLambda\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add a call to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AddAWSLambdaConfigurations()\"), \" from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TracerProvider\"), \".\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"TracerProvider tracerProvider = Sdk.CreateTracerProviderBuilder()\\n        // add other instrumentations\\n        .AddAWSLambdaConfigurations()\\n        .Build();\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a wrapper function with the same signature as the original Lambda function.\\nCall \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AWSLambdaWrapper.Trace()\"), \" API and pass \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TracerProvider\"), \", the original Lambda function, and its inputs as parameters.\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Set the wrapper function as the Lambda handler input.\"), \" See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-lambda/blob/main/dotnet/sample-apps/aws-sdk/wrapper/SampleApps/AwsSdkSample/Function.cs\"\n  }, \"sample app\"), \" for more code instrumentation details.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"// new Lambda function handler passed in\\npublic string TracingFunctionHandler(JObject input, ILambdaContext context)\\n=> AWSLambdaWrapper.Trace(tracerProvider, OriginalFunctionHandler, input, context);\\n\\npublic string OriginalFunctionHandler(JObject input, ILambdaContext context)\\n{\\n    return input?.ToString();\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"lambda-layer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#lambda-layer\",\n    \"aria-label\": \"lambda layer permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Lambda Layer\"), mdx(\"p\", null, \"This layer includes a reduced version of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector\"\n  }, \"AWS Distro for OpenTelemetry Collector (ADOT Collector)\"), \",\\nwhich runs as a Lambda extension.\"), mdx(\"p\", null, \"Note: Lambda layers are a regionalized resource, meaning that they can only be used in the Region in which they are published.\\nMake sure to use the layer in the same region as your Lambda functions.\"), mdx(\"p\", null, \"Find the supported regions and amd64/arm64 layer ARN in the table below for the ARNs to consume. Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"amd64\"), \" as architecture \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\"\n  }, \"for x86-based processors\"), \".\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Supported   Regions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Lambda layer ARN format\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Contents\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ap-northeast-1\", mdx(\"br\", null), \"ap-northeast-2\", mdx(\"br\", null), \"ap-south-1\", mdx(\"br\", null), \"ap-southeast-1\", mdx(\"br\", null), \"ap-southeast-2\", mdx(\"br\", null), \"ca-central-1\", mdx(\"br\", null), \"eu-central-1\", mdx(\"br\", null), \"eu-north-1\", mdx(\"br\", null), \"eu-west-1\", mdx(\"br\", null), \"eu-west-2\", mdx(\"br\", null), \"eu-west-3\", mdx(\"br\", null), \"sa-east-1\", mdx(\"br\", null), \"us-east-1\", mdx(\"br\", null), \"us-east-2\", mdx(\"br\", null), \"us-west-1\", mdx(\"br\", null), \"us-west-2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"arn:aws:lambda:<region\", \">\", \":901920570463:layer:aws-otel-collector-<architecture\", \">\", \"-ver-0-117-0:1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Contains ADOT Collector v0.43.0\")))), mdx(\"h3\", {\n    \"id\": \"enable-tracing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#enable-tracing\",\n    \"aria-label\": \"enable tracing permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Enable Tracing\"), mdx(\"p\", null, \"Once you\\u2019ve instrumented the Lambda function code and deployed to Lambda service, you can follow the instructions below to apply Lambda layer.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open the Lambda function you intend to trace in the AWS console. \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Layers\"), \" section, choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add a layer\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Under \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Specify an ARN\"), \", paste the layer ARN, and then choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add\"), \".\")), mdx(\"p\", null, \"Also, remember to turn on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\"\n  }, \"active tracing\"), \" on Lambda console so as to enable end-to-end tracing.\"), mdx(\"p\", null, \"Tips:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"By default, the layer is configured to export traces to AWS X-Ray.\\nMake sure your Lambda role has the required AWS X-Ray permissions.\\nSee more on \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html#services-xray-permissions\"\n  }, \"AWS X-Ray permissions\"), \" for AWS Lambda.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To disable tracing, you\\u2019ll need to remove ADOT Lambda layer from your Lambda function and disable active tracing as described above.\")), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"configuration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#configuration\",\n    \"aria-label\": \"configuration permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Configuration\"), mdx(\"p\", null, \"The ADOT Lambda layer contains the ADOT Collector. The configuration of the ADOT Collector follows the OpenTelemetry standard and uses the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/aws-observability/aws-otel-lambda/blob/main/adot/collector/config.yaml\"\n  }, \"config.yaml\"), \" by default,\\nwhich exports telemetry data to AWS X-Ray. To customize the Collector config,\\nsee the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/getting-started/lambda#custom-configuration-for-the-adot-collector-on-lambda\"\n  }, \"main Lambda section for custom configuration instructions\")), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"additional-instrumentation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#additional-instrumentation\",\n    \"aria-label\": \"additional instrumentation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Additional Instrumentation\"), mdx(\"p\", null, \"For additional instrumentation, see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-dotnet\"\n  }, \"OpenTelemetry .NET documentation\"), \".\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"service-graph\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#service-graph\",\n    \"aria-label\": \"service graph permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Service Graph\"), mdx(\"p\", null, \"Below is a sample X-Ray service graph showing an instrumented Lambda handler (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SampleLambdaHandler\"), \") firing a request to AWS S3. Note that there are three \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SampleLambdaHandler\"), \" nodes in the service graph.\\nThe first two are X-Ray segments created by Lambda runtime, which denotes Lambda service and Lambda function respectively. The third one is created by ADOT Lambda .NET SDK, which will be eventually merged with Lambda function segment in the service graph in future.\"), mdx(\"img\", {\n    src: img16,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Instrumentation"},{"depth":3,"value":"Code Instrumentation"},{"depth":3,"value":"Lambda Layer"},{"depth":3,"value":"Enable Tracing"},{"depth":2,"value":"Configuration"},{"depth":2,"value":"Additional Instrumentation"},{"depth":2,"value":"Service Graph"}]}},"pageContext":{"slug":"/docs/getting-started/lambda/lambda-dotnet/","repositoryEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/main/examples/gatsby-theme-docs/src/docs/getting-started/lambda/lambda-dotnet.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["2501019404","973074209"]}